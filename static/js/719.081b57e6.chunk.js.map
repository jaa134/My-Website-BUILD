{"version":3,"file":"static/js/719.081b57e6.chunk.js","mappings":"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","sources":["../node_modules/satellite.js/dist/satellite.es.js"],"sourcesContent":["/*!\n * satellite-js v5.0.0\n * (c) 2013 Shashwat Kandadai and UCSC\n * https://github.com/shashwatak/satellite-js\n * License: MIT\n */\n\nvar pi = Math.PI;\nvar twoPi = pi * 2;\nvar deg2rad = pi / 180.0;\nvar rad2deg = 180 / pi;\nvar minutesPerDay = 1440.0;\nvar mu = 398600.8; // in km3 / s2\nvar earthRadius = 6378.135; // in km\nvar xke = 60.0 / Math.sqrt(earthRadius * earthRadius * earthRadius / mu);\nvar vkmpersec = earthRadius * xke / 60.0;\nvar tumin = 1.0 / xke;\nvar j2 = 0.001082616;\nvar j3 = -0.00000253881;\nvar j4 = -0.00000165597;\nvar j3oj2 = j3 / j2;\nvar x2o3 = 2.0 / 3.0;\n\nvar constants = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  deg2rad: deg2rad,\n  earthRadius: earthRadius,\n  j2: j2,\n  j3: j3,\n  j3oj2: j3oj2,\n  j4: j4,\n  minutesPerDay: minutesPerDay,\n  mu: mu,\n  pi: pi,\n  rad2deg: rad2deg,\n  tumin: tumin,\n  twoPi: twoPi,\n  vkmpersec: vkmpersec,\n  x2o3: x2o3,\n  xke: xke\n});\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure days2mdhms\n *\n *  this procedure converts the day of the year, days, to the equivalent month\n *    day, hour, minute and second.\n *\n *  algorithm     : set up array for the number of days per month\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  loop through a temp value while the value is < the days\n *                  perform int conversions to the correct day and month\n *                  convert remainder into h m s using type conversions\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    days        - julian day of the year         0.0  .. 366.0\n *\n *  outputs       :\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    dayofyr     - day of year\n *    temp        - temporary extended values\n *    inttemp     - temporary int value\n *    i           - index\n *    lmonth[12]  - int array containing the number of days per month\n *\n *  coupling      :\n *    none.\n * --------------------------------------------------------------------------- */\nfunction days2mdhms(year, days) {\n  var lmonth = [31, year % 4 === 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  var dayofyr = Math.floor(days);\n\n  //  ----------------- find month and day of month ----------------\n  var i = 1;\n  var inttemp = 0;\n  while (dayofyr > inttemp + lmonth[i - 1] && i < 12) {\n    inttemp += lmonth[i - 1];\n    i += 1;\n  }\n  var mon = i;\n  var day = dayofyr - inttemp;\n\n  //  ----------------- find hours minutes and seconds -------------\n  var temp = (days - dayofyr) * 24.0;\n  var hr = Math.floor(temp);\n  temp = (temp - hr) * 60.0;\n  var minute = Math.floor(temp);\n  var sec = (temp - minute) * 60.0;\n  return {\n    mon: mon,\n    day: day,\n    hr: hr,\n    minute: minute,\n    sec: sec\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure jday\n *\n *  this procedure finds the julian date given the year, month, day, and time.\n *    the julian date is defined by each elapsed day since noon, jan 1, 4713 bc.\n *\n *  algorithm     : calculate the answer in one step for efficiency\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - universal time hour            0 .. 23\n *    min         - universal time min             0 .. 59\n *    sec         - universal time sec             0.0 .. 59.999\n *\n *  outputs       :\n *    jd          - julian date                    days from 4713 bc\n *\n *  locals        :\n *    none.\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    vallado       2007, 189, alg 14, ex 3-14\n *\n * --------------------------------------------------------------------------- */\nfunction jdayInternal(year, mon, day, hr, minute, sec) {\n  var msec = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor(275 * mon / 9.0) + day + 1721013.5 + ((msec / 60000 + sec / 60.0 + minute) / 60.0 + hr) / 24.0 // ut in days\n  // # - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\n  ;\n}\n\nfunction jday(year, mon, day, hr, minute, sec, msec) {\n  if (year instanceof Date) {\n    var date = year;\n    return jdayInternal(date.getUTCFullYear(), date.getUTCMonth() + 1,\n    // Note, this function requires months in range 1-12.\n    date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  }\n  return jdayInternal(year, mon, day, hr, minute, sec, msec);\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure invjday\n *\n *  this procedure finds the year, month, day, hour, minute and second\n *  given the julian date. tu can be ut1, tdt, tdb, etc.\n *\n *  algorithm     : set up starting values\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  find the elapsed days through the year in a loop\n *                  call routine to find each individual value\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jd          - julian date                    days from 4713 bc\n *\n *  outputs       :\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    days        - day of year plus fractional\n *                  portion of a day               days\n *    tu          - julian centuries from 0 h\n *                  jan 0, 1900\n *    temp        - temporary double values\n *    leapyrs     - number of leap years from 1900\n *\n *  coupling      :\n *    days2mdhms  - finds month, day, hour, minute and second given days and year\n *\n *  references    :\n *    vallado       2007, 208, alg 22, ex 3-13\n * --------------------------------------------------------------------------- */\nfunction invjday(jd, asArray) {\n  // --------------- find year and days of the year -\n  var temp = jd - 2415019.5;\n  var tu = temp / 365.25;\n  var year = 1900 + Math.floor(tu);\n  var leapyrs = Math.floor((year - 1901) * 0.25);\n\n  // optional nudge by 8.64x10-7 sec to get even outputs\n  var days = temp - ((year - 1900) * 365.0 + leapyrs) + 0.00000000001;\n\n  // ------------ check for case of beginning of a year -----------\n  if (days < 1.0) {\n    year -= 1;\n    leapyrs = Math.floor((year - 1901) * 0.25);\n    days = temp - ((year - 1900) * 365.0 + leapyrs);\n  }\n\n  // ----------------- find remaing data  -------------------------\n  var mdhms = days2mdhms(year, days);\n  var mon = mdhms.mon,\n    day = mdhms.day,\n    hr = mdhms.hr,\n    minute = mdhms.minute;\n  var sec = mdhms.sec - 0.00000086400;\n  if (asArray) {\n    return [year, mon, day, hr, minute, Math.floor(sec)];\n  }\n  return new Date(Date.UTC(year, mon - 1, day, hr, minute, Math.floor(sec)));\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure dpper\n *\n *  this procedure provides deep space long period periodic contributions\n *    to the mean elements.  by design, these periodics are zero at epoch.\n *    this used to be dscom which included initialization, but it's really a\n *    recurring function.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    e3          -\n *    ee2         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    se2 , se3 , sgh2, sgh3, sgh4, sh2, sh3, si2, si3, sl2, sl3, sl4 -\n *    t           -\n *    xh2, xh3, xi2, xi3, xl2, xl3, xl4 -\n *    zmol        -\n *    zmos        -\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclo       - inclination - needed for lyddane modification\n *    nodep       - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  outputs       :\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclp       - inclination\n *    nodep        - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  locals        :\n *    alfdp       -\n *    betdp       -\n *    cosip  , sinip  , cosop  , sinop  ,\n *    dalf        -\n *    dbet        -\n *    dls         -\n *    f2, f3      -\n *    pe          -\n *    pgh         -\n *    ph          -\n *    pinc        -\n *    pl          -\n *    sel   , ses   , sghl  , sghs  , shl   , shs   , sil   , sinzf , sis   ,\n *    sll   , sls\n *    xls         -\n *    xnoh        -\n *    zf          -\n *    zm          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dpper(satrec, options) {\n  var e3 = satrec.e3,\n    ee2 = satrec.ee2,\n    peo = satrec.peo,\n    pgho = satrec.pgho,\n    pho = satrec.pho,\n    pinco = satrec.pinco,\n    plo = satrec.plo,\n    se2 = satrec.se2,\n    se3 = satrec.se3,\n    sgh2 = satrec.sgh2,\n    sgh3 = satrec.sgh3,\n    sgh4 = satrec.sgh4,\n    sh2 = satrec.sh2,\n    sh3 = satrec.sh3,\n    si2 = satrec.si2,\n    si3 = satrec.si3,\n    sl2 = satrec.sl2,\n    sl3 = satrec.sl3,\n    sl4 = satrec.sl4,\n    t = satrec.t,\n    xgh2 = satrec.xgh2,\n    xgh3 = satrec.xgh3,\n    xgh4 = satrec.xgh4,\n    xh2 = satrec.xh2,\n    xh3 = satrec.xh3,\n    xi2 = satrec.xi2,\n    xi3 = satrec.xi3,\n    xl2 = satrec.xl2,\n    xl3 = satrec.xl3,\n    xl4 = satrec.xl4,\n    zmol = satrec.zmol,\n    zmos = satrec.zmos;\n  var init = options.init,\n    opsmode = options.opsmode;\n  var ep = options.ep,\n    inclp = options.inclp,\n    nodep = options.nodep,\n    argpp = options.argpp,\n    mp = options.mp;\n\n  // Copy satellite attributes into local variables for convenience\n  // and symmetry in writing formulae.\n\n  var alfdp;\n  var betdp;\n  var cosip;\n  var sinip;\n  var cosop;\n  var sinop;\n  var dalf;\n  var dbet;\n  var dls;\n  var f2;\n  var f3;\n  var pe;\n  var pgh;\n  var ph;\n  var pinc;\n  var pl;\n  var sinzf;\n  var xls;\n  var xnoh;\n  var zf;\n  var zm;\n\n  //  ---------------------- constants -----------------------------\n  var zns = 1.19459e-5;\n  var zes = 0.01675;\n  var znl = 1.5835218e-4;\n  var zel = 0.05490;\n\n  //  --------------- calculate time varying periodics -----------\n  zm = zmos + zns * t;\n\n  // be sure that the initial call has time set to zero\n  if (init === 'y') {\n    zm = zmos;\n  }\n  zf = zm + 2.0 * zes * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var ses = se2 * f2 + se3 * f3;\n  var sis = si2 * f2 + si3 * f3;\n  var sls = sl2 * f2 + sl3 * f3 + sl4 * sinzf;\n  var sghs = sgh2 * f2 + sgh3 * f3 + sgh4 * sinzf;\n  var shs = sh2 * f2 + sh3 * f3;\n  zm = zmol + znl * t;\n  if (init === 'y') {\n    zm = zmol;\n  }\n  zf = zm + 2.0 * zel * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var sel = ee2 * f2 + e3 * f3;\n  var sil = xi2 * f2 + xi3 * f3;\n  var sll = xl2 * f2 + xl3 * f3 + xl4 * sinzf;\n  var sghl = xgh2 * f2 + xgh3 * f3 + xgh4 * sinzf;\n  var shll = xh2 * f2 + xh3 * f3;\n  pe = ses + sel;\n  pinc = sis + sil;\n  pl = sls + sll;\n  pgh = sghs + sghl;\n  ph = shs + shll;\n  if (init === 'n') {\n    pe -= peo;\n    pinc -= pinco;\n    pl -= plo;\n    pgh -= pgho;\n    ph -= pho;\n    inclp += pinc;\n    ep += pe;\n    sinip = Math.sin(inclp);\n    cosip = Math.cos(inclp);\n\n    /* ----------------- apply periodics directly ------------ */\n    // sgp4fix for lyddane choice\n    // strn3 used original inclination - this is technically feasible\n    // gsfc used perturbed inclination - also technically feasible\n    // probably best to readjust the 0.2 limit value and limit discontinuity\n    // 0.2 rad = 11.45916 deg\n    // use next line for original strn3 approach and original inclination\n    // if (inclo >= 0.2)\n    // use next line for gsfc version and perturbed inclination\n    if (inclp >= 0.2) {\n      ph /= sinip;\n      pgh -= cosip * ph;\n      argpp += pgh;\n      nodep += ph;\n      mp += pl;\n    } else {\n      //  ---- apply periodics with lyddane modification ----\n      sinop = Math.sin(nodep);\n      cosop = Math.cos(nodep);\n      alfdp = sinip * sinop;\n      betdp = sinip * cosop;\n      dalf = ph * cosop + pinc * cosip * sinop;\n      dbet = -ph * sinop + pinc * cosip * cosop;\n      alfdp += dalf;\n      betdp += dbet;\n      nodep %= twoPi;\n\n      //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n      xls = mp + argpp + cosip * nodep;\n      dls = pl + pgh - pinc * nodep * sinip;\n      xls += dls;\n      xnoh = nodep;\n      nodep = Math.atan2(alfdp, betdp);\n\n      //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n      if (Math.abs(xnoh - nodep) > pi) {\n        if (nodep < xnoh) {\n          nodep += twoPi;\n        } else {\n          nodep -= twoPi;\n        }\n      }\n      mp += pl;\n      argpp = xls - mp - cosip * nodep;\n    }\n  }\n  return {\n    ep: ep,\n    inclp: inclp,\n    nodep: nodep,\n    argpp: argpp,\n    mp: mp\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dscom\n *\n *  this procedure provides deep space common items used by both the secular\n *    and periodics subroutines.  input is provided as shown. this routine\n *    used to be called dpper, but the functions inside weren't well organized.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    epoch       -\n *    ep          - eccentricity\n *    argpp       - argument of perigee\n *    tc          -\n *    inclp       - inclination\n *    nodep       - right ascension of ascending node\n *    np          - mean motion\n *\n *  outputs       :\n *    sinim  , cosim  , sinomm , cosomm , snodm  , cnodm\n *    day         -\n *    e3          -\n *    ee2         -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    gam         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    rtemsq      -\n *    se2, se3         -\n *    sgh2, sgh3, sgh4        -\n *    sh2, sh3, si2, si3, sl2, sl3, sl4         -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7, sz1, sz2, sz3         -\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    xgh2, xgh3, xgh4, xh2, xh3, xi2, xi3, xl2, xl3, xl4         -\n *    nm          - mean motion\n *    z1, z2, z3, z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *    zmol        -\n *    zmos        -\n *\n *  locals        :\n *    a1, a2, a3, a4, a5, a6, a7, a8, a9, a10         -\n *    betasq      -\n *    cc          -\n *    ctem, stem        -\n *    x1, x2, x3, x4, x5, x6, x7, x8          -\n *    xnodce      -\n *    xnoi        -\n *    zcosg  , zsing  , zcosgl , zsingl , zcosh  , zsinh  , zcoshl , zsinhl ,\n *    zcosi  , zsini  , zcosil , zsinil ,\n *    zx          -\n *    zy          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dscom(options) {\n  var epoch = options.epoch,\n    ep = options.ep,\n    argpp = options.argpp,\n    tc = options.tc,\n    inclp = options.inclp,\n    nodep = options.nodep,\n    np = options.np;\n  var a1;\n  var a2;\n  var a3;\n  var a4;\n  var a5;\n  var a6;\n  var a7;\n  var a8;\n  var a9;\n  var a10;\n  var cc;\n  var x1;\n  var x2;\n  var x3;\n  var x4;\n  var x5;\n  var x6;\n  var x7;\n  var x8;\n  var zcosg;\n  var zsing;\n  var zcosh;\n  var zsinh;\n  var zcosi;\n  var zsini;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var ss6;\n  var ss7;\n  var sz1;\n  var sz2;\n  var sz3;\n  var sz11;\n  var sz12;\n  var sz13;\n  var sz21;\n  var sz22;\n  var sz23;\n  var sz31;\n  var sz32;\n  var sz33;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var s6;\n  var s7;\n  var z1;\n  var z2;\n  var z3;\n  var z11;\n  var z12;\n  var z13;\n  var z21;\n  var z22;\n  var z23;\n  var z31;\n  var z32;\n  var z33;\n\n  // -------------------------- constants -------------------------\n  var zes = 0.01675;\n  var zel = 0.05490;\n  var c1ss = 2.9864797e-6;\n  var c1l = 4.7968065e-7;\n  var zsinis = 0.39785416;\n  var zcosis = 0.91744867;\n  var zcosgs = 0.1945905;\n  var zsings = -0.98088458;\n\n  //  --------------------- local variables ------------------------\n  var nm = np;\n  var em = ep;\n  var snodm = Math.sin(nodep);\n  var cnodm = Math.cos(nodep);\n  var sinomm = Math.sin(argpp);\n  var cosomm = Math.cos(argpp);\n  var sinim = Math.sin(inclp);\n  var cosim = Math.cos(inclp);\n  var emsq = em * em;\n  var betasq = 1.0 - emsq;\n  var rtemsq = Math.sqrt(betasq);\n\n  //  ----------------- initialize lunar solar terms ---------------\n  var peo = 0.0;\n  var pinco = 0.0;\n  var plo = 0.0;\n  var pgho = 0.0;\n  var pho = 0.0;\n  var day = epoch + 18261.5 + tc / 1440.0;\n  var xnodce = (4.5236020 - 9.2422029e-4 * day) % twoPi;\n  var stem = Math.sin(xnodce);\n  var ctem = Math.cos(xnodce);\n  var zcosil = 0.91375164 - 0.03568096 * ctem;\n  var zsinil = Math.sqrt(1.0 - zcosil * zcosil);\n  var zsinhl = 0.089683511 * stem / zsinil;\n  var zcoshl = Math.sqrt(1.0 - zsinhl * zsinhl);\n  var gam = 5.8351514 + 0.0019443680 * day;\n  var zx = 0.39785416 * stem / zsinil;\n  var zy = zcoshl * ctem + 0.91744867 * zsinhl * stem;\n  zx = Math.atan2(zx, zy);\n  zx += gam - xnodce;\n  var zcosgl = Math.cos(zx);\n  var zsingl = Math.sin(zx);\n\n  //  ------------------------- do solar terms ---------------------\n  zcosg = zcosgs;\n  zsing = zsings;\n  zcosi = zcosis;\n  zsini = zsinis;\n  zcosh = cnodm;\n  zsinh = snodm;\n  cc = c1ss;\n  var xnoi = 1.0 / nm;\n  var lsflg = 0;\n  while (lsflg < 2) {\n    lsflg += 1;\n    a1 = zcosg * zcosh + zsing * zcosi * zsinh;\n    a3 = -zsing * zcosh + zcosg * zcosi * zsinh;\n    a7 = -zcosg * zsinh + zsing * zcosi * zcosh;\n    a8 = zsing * zsini;\n    a9 = zsing * zsinh + zcosg * zcosi * zcosh;\n    a10 = zcosg * zsini;\n    a2 = cosim * a7 + sinim * a8;\n    a4 = cosim * a9 + sinim * a10;\n    a5 = -sinim * a7 + cosim * a8;\n    a6 = -sinim * a9 + cosim * a10;\n    x1 = a1 * cosomm + a2 * sinomm;\n    x2 = a3 * cosomm + a4 * sinomm;\n    x3 = -a1 * sinomm + a2 * cosomm;\n    x4 = -a3 * sinomm + a4 * cosomm;\n    x5 = a5 * sinomm;\n    x6 = a6 * sinomm;\n    x7 = a5 * cosomm;\n    x8 = a6 * cosomm;\n    z31 = 12.0 * x1 * x1 - 3.0 * x3 * x3;\n    z32 = 24.0 * x1 * x2 - 6.0 * x3 * x4;\n    z33 = 12.0 * x2 * x2 - 3.0 * x4 * x4;\n    z1 = 3.0 * (a1 * a1 + a2 * a2) + z31 * emsq;\n    z2 = 6.0 * (a1 * a3 + a2 * a4) + z32 * emsq;\n    z3 = 3.0 * (a3 * a3 + a4 * a4) + z33 * emsq;\n    z11 = -6.0 * a1 * a5 + emsq * (-24.0 * x1 * x7 - 6.0 * x3 * x5);\n    z12 = -6.0 * (a1 * a6 + a3 * a5) + emsq * (-24.0 * (x2 * x7 + x1 * x8) + -6.0 * (x3 * x6 + x4 * x5));\n    z13 = -6.0 * a3 * a6 + emsq * (-24.0 * x2 * x8 - 6.0 * x4 * x6);\n    z21 = 6.0 * a2 * a5 + emsq * (24.0 * x1 * x5 - 6.0 * x3 * x7);\n    z22 = 6.0 * (a4 * a5 + a2 * a6) + emsq * (24.0 * (x2 * x5 + x1 * x6) - 6.0 * (x4 * x7 + x3 * x8));\n    z23 = 6.0 * a4 * a6 + emsq * (24.0 * x2 * x6 - 6.0 * x4 * x8);\n    z1 = z1 + z1 + betasq * z31;\n    z2 = z2 + z2 + betasq * z32;\n    z3 = z3 + z3 + betasq * z33;\n    s3 = cc * xnoi;\n    s2 = -0.5 * s3 / rtemsq;\n    s4 = s3 * rtemsq;\n    s1 = -15.0 * em * s4;\n    s5 = x1 * x3 + x2 * x4;\n    s6 = x2 * x3 + x1 * x4;\n    s7 = x2 * x4 - x1 * x3;\n\n    //  ----------------------- do lunar terms -------------------\n    if (lsflg === 1) {\n      ss1 = s1;\n      ss2 = s2;\n      ss3 = s3;\n      ss4 = s4;\n      ss5 = s5;\n      ss6 = s6;\n      ss7 = s7;\n      sz1 = z1;\n      sz2 = z2;\n      sz3 = z3;\n      sz11 = z11;\n      sz12 = z12;\n      sz13 = z13;\n      sz21 = z21;\n      sz22 = z22;\n      sz23 = z23;\n      sz31 = z31;\n      sz32 = z32;\n      sz33 = z33;\n      zcosg = zcosgl;\n      zsing = zsingl;\n      zcosi = zcosil;\n      zsini = zsinil;\n      zcosh = zcoshl * cnodm + zsinhl * snodm;\n      zsinh = snodm * zcoshl - cnodm * zsinhl;\n      cc = c1l;\n    }\n  }\n  var zmol = (4.7199672 + (0.22997150 * day - gam)) % twoPi;\n  var zmos = (6.2565837 + 0.017201977 * day) % twoPi;\n\n  //  ------------------------ do solar terms ----------------------\n  var se2 = 2.0 * ss1 * ss6;\n  var se3 = 2.0 * ss1 * ss7;\n  var si2 = 2.0 * ss2 * sz12;\n  var si3 = 2.0 * ss2 * (sz13 - sz11);\n  var sl2 = -2.0 * ss3 * sz2;\n  var sl3 = -2.0 * ss3 * (sz3 - sz1);\n  var sl4 = -2.0 * ss3 * (-21.0 - 9.0 * emsq) * zes;\n  var sgh2 = 2.0 * ss4 * sz32;\n  var sgh3 = 2.0 * ss4 * (sz33 - sz31);\n  var sgh4 = -18.0 * ss4 * zes;\n  var sh2 = -2.0 * ss2 * sz22;\n  var sh3 = -2.0 * ss2 * (sz23 - sz21);\n\n  //  ------------------------ do lunar terms ----------------------\n  var ee2 = 2.0 * s1 * s6;\n  var e3 = 2.0 * s1 * s7;\n  var xi2 = 2.0 * s2 * z12;\n  var xi3 = 2.0 * s2 * (z13 - z11);\n  var xl2 = -2.0 * s3 * z2;\n  var xl3 = -2.0 * s3 * (z3 - z1);\n  var xl4 = -2.0 * s3 * (-21.0 - 9.0 * emsq) * zel;\n  var xgh2 = 2.0 * s4 * z32;\n  var xgh3 = 2.0 * s4 * (z33 - z31);\n  var xgh4 = -18.0 * s4 * zel;\n  var xh2 = -2.0 * s2 * z22;\n  var xh3 = -2.0 * s2 * (z23 - z21);\n  return {\n    snodm: snodm,\n    cnodm: cnodm,\n    sinim: sinim,\n    cosim: cosim,\n    sinomm: sinomm,\n    cosomm: cosomm,\n    day: day,\n    e3: e3,\n    ee2: ee2,\n    em: em,\n    emsq: emsq,\n    gam: gam,\n    peo: peo,\n    pgho: pgho,\n    pho: pho,\n    pinco: pinco,\n    plo: plo,\n    rtemsq: rtemsq,\n    se2: se2,\n    se3: se3,\n    sgh2: sgh2,\n    sgh3: sgh3,\n    sgh4: sgh4,\n    sh2: sh2,\n    sh3: sh3,\n    si2: si2,\n    si3: si3,\n    sl2: sl2,\n    sl3: sl3,\n    sl4: sl4,\n    s1: s1,\n    s2: s2,\n    s3: s3,\n    s4: s4,\n    s5: s5,\n    s6: s6,\n    s7: s7,\n    ss1: ss1,\n    ss2: ss2,\n    ss3: ss3,\n    ss4: ss4,\n    ss5: ss5,\n    ss6: ss6,\n    ss7: ss7,\n    sz1: sz1,\n    sz2: sz2,\n    sz3: sz3,\n    sz11: sz11,\n    sz12: sz12,\n    sz13: sz13,\n    sz21: sz21,\n    sz22: sz22,\n    sz23: sz23,\n    sz31: sz31,\n    sz32: sz32,\n    sz33: sz33,\n    xgh2: xgh2,\n    xgh3: xgh3,\n    xgh4: xgh4,\n    xh2: xh2,\n    xh3: xh3,\n    xi2: xi2,\n    xi3: xi3,\n    xl2: xl2,\n    xl3: xl3,\n    xl4: xl4,\n    nm: nm,\n    z1: z1,\n    z2: z2,\n    z3: z3,\n    z11: z11,\n    z12: z12,\n    z13: z13,\n    z21: z21,\n    z22: z22,\n    z23: z23,\n    z31: z31,\n    z32: z32,\n    z33: z33,\n    zmol: zmol,\n    zmos: zmos\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dsinit\n *\n *  this procedure provides deep space contributions to mean motion dot due\n *    to geopotential resonance with half day and one day orbits.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    cosim, sinim-\n *    emsq        - eccentricity squared\n *    argpo       - argument of perigee\n *    s1, s2, s3, s4, s5      -\n *    ss1, ss2, ss3, ss4, ss5 -\n *    sz1, sz3, sz11, sz13, sz21, sz23, sz31, sz33 -\n *    t           - time\n *    tc          -\n *    gsto        - greenwich sidereal time                   rad\n *    mo          - mean anomaly\n *    mdot        - mean anomaly dot (rate)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *    nodedot     - right ascension of ascending node dot (rate)\n *    xpidot      -\n *    z1, z3, z11, z13, z21, z23, z31, z33 -\n *    eccm        - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    xn          - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right ascension of ascending node\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    atime       -\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433    -\n *    dedt        -\n *    didt        -\n *    dmdt        -\n *    dndt        -\n *    dnodt       -\n *    domdt       -\n *    del1, del2, del3        -\n *    ses  , sghl , sghs , sgs  , shl  , shs  , sis  , sls\n *    theta       -\n *    xfact       -\n *    xlamo       -\n *    xli         -\n *    xni\n *\n *  locals        :\n *    ainv2       -\n *    aonv        -\n *    cosisq      -\n *    eoc         -\n *    f220, f221, f311, f321, f322, f330, f441, f442, f522, f523, f542, f543  -\n *    g200, g201, g211, g300, g310, g322, g410, g422, g520, g521, g532, g533  -\n *    sini2       -\n *    temp        -\n *    temp1       -\n *    theta       -\n *    xno2        -\n *\n *  coupling      :\n *    getgravconst\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dsinit(options) {\n  var cosim = options.cosim,\n    argpo = options.argpo,\n    s1 = options.s1,\n    s2 = options.s2,\n    s3 = options.s3,\n    s4 = options.s4,\n    s5 = options.s5,\n    sinim = options.sinim,\n    ss1 = options.ss1,\n    ss2 = options.ss2,\n    ss3 = options.ss3,\n    ss4 = options.ss4,\n    ss5 = options.ss5,\n    sz1 = options.sz1,\n    sz3 = options.sz3,\n    sz11 = options.sz11,\n    sz13 = options.sz13,\n    sz21 = options.sz21,\n    sz23 = options.sz23,\n    sz31 = options.sz31,\n    sz33 = options.sz33,\n    t = options.t,\n    tc = options.tc,\n    gsto = options.gsto,\n    mo = options.mo,\n    mdot = options.mdot,\n    no = options.no,\n    nodeo = options.nodeo,\n    nodedot = options.nodedot,\n    xpidot = options.xpidot,\n    z1 = options.z1,\n    z3 = options.z3,\n    z11 = options.z11,\n    z13 = options.z13,\n    z21 = options.z21,\n    z23 = options.z23,\n    z31 = options.z31,\n    z33 = options.z33,\n    ecco = options.ecco,\n    eccsq = options.eccsq;\n  var emsq = options.emsq,\n    em = options.em,\n    argpm = options.argpm,\n    inclm = options.inclm,\n    mm = options.mm,\n    nm = options.nm,\n    nodem = options.nodem,\n    irez = options.irez,\n    atime = options.atime,\n    d2201 = options.d2201,\n    d2211 = options.d2211,\n    d3210 = options.d3210,\n    d3222 = options.d3222,\n    d4410 = options.d4410,\n    d4422 = options.d4422,\n    d5220 = options.d5220,\n    d5232 = options.d5232,\n    d5421 = options.d5421,\n    d5433 = options.d5433,\n    dedt = options.dedt,\n    didt = options.didt,\n    dmdt = options.dmdt,\n    dnodt = options.dnodt,\n    domdt = options.domdt,\n    del1 = options.del1,\n    del2 = options.del2,\n    del3 = options.del3,\n    xfact = options.xfact,\n    xlamo = options.xlamo,\n    xli = options.xli,\n    xni = options.xni;\n  var f220;\n  var f221;\n  var f311;\n  var f321;\n  var f322;\n  var f330;\n  var f441;\n  var f442;\n  var f522;\n  var f523;\n  var f542;\n  var f543;\n  var g200;\n  var g201;\n  var g211;\n  var g300;\n  var g310;\n  var g322;\n  var g410;\n  var g422;\n  var g520;\n  var g521;\n  var g532;\n  var g533;\n  var sini2;\n  var temp;\n  var temp1;\n  var xno2;\n  var ainv2;\n  var aonv;\n  var cosisq;\n  var eoc;\n  var q22 = 1.7891679e-6;\n  var q31 = 2.1460748e-6;\n  var q33 = 2.2123015e-7;\n  var root22 = 1.7891679e-6;\n  var root44 = 7.3636953e-9;\n  var root54 = 2.1765803e-9;\n  // eslint-disable-next-line no-loss-of-precision\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n  var root32 = 3.7393792e-7;\n  var root52 = 1.1428639e-7;\n  var znl = 1.5835218e-4;\n  var zns = 1.19459e-5;\n\n  // -------------------- deep space initialization ------------\n  irez = 0;\n  if (nm < 0.0052359877 && nm > 0.0034906585) {\n    irez = 1;\n  }\n  if (nm >= 8.26e-3 && nm <= 9.24e-3 && em >= 0.5) {\n    irez = 2;\n  }\n\n  // ------------------------ do solar terms -------------------\n  var ses = ss1 * zns * ss5;\n  var sis = ss2 * zns * (sz11 + sz13);\n  var sls = -zns * ss3 * (sz1 + sz3 - 14.0 - 6.0 * emsq);\n  var sghs = ss4 * zns * (sz31 + sz33 - 6.0);\n  var shs = -zns * ss2 * (sz21 + sz23);\n\n  // sgp4fix for 180 deg incl\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shs = 0.0;\n  }\n  if (sinim !== 0.0) {\n    shs /= sinim;\n  }\n  var sgs = sghs - cosim * shs;\n\n  // ------------------------- do lunar terms ------------------\n  dedt = ses + s1 * znl * s5;\n  didt = sis + s2 * znl * (z11 + z13);\n  dmdt = sls - znl * s3 * (z1 + z3 - 14.0 - 6.0 * emsq);\n  var sghl = s4 * znl * (z31 + z33 - 6.0);\n  var shll = -znl * s2 * (z21 + z23);\n\n  // sgp4fix for 180 deg incl\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shll = 0.0;\n  }\n  domdt = sgs + sghl;\n  dnodt = shs;\n  if (sinim !== 0.0) {\n    domdt -= cosim / sinim * shll;\n    dnodt += shll / sinim;\n  }\n\n  // ----------- calculate deep space resonance effects --------\n  var dndt = 0.0;\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t;\n\n  // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm  = -inclm;\n  //   argpm  = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  // -------------- initialize the resonance terms -------------\n  if (irez !== 0) {\n    aonv = Math.pow(nm / xke, x2o3);\n\n    // ---------- geopotential resonance for 12 hour orbits ------\n    if (irez === 2) {\n      cosisq = cosim * cosim;\n      var emo = em;\n      em = ecco;\n      var emsqo = emsq;\n      emsq = eccsq;\n      eoc = em * emsq;\n      g201 = -0.306 - (em - 0.64) * 0.440;\n      if (em <= 0.65) {\n        g211 = 3.616 - 13.2470 * em + 16.2900 * emsq;\n        g310 = -19.302 + 117.3900 * em - 228.4190 * emsq + 156.5910 * eoc;\n        g322 = -18.9068 + 109.7927 * em - 214.6334 * emsq + 146.5816 * eoc;\n        g410 = -41.122 + 242.6940 * em - 471.0940 * emsq + 313.9530 * eoc;\n        g422 = -146.407 + 841.8800 * em - 1629.014 * emsq + 1083.4350 * eoc;\n        g520 = -532.114 + 3017.977 * em - 5740.032 * emsq + 3708.2760 * eoc;\n      } else {\n        g211 = -72.099 + 331.819 * em - 508.738 * emsq + 266.724 * eoc;\n        g310 = -346.844 + 1582.851 * em - 2415.925 * emsq + 1246.113 * eoc;\n        g322 = -342.585 + 1554.908 * em - 2366.899 * emsq + 1215.972 * eoc;\n        g410 = -1052.797 + 4758.686 * em - 7193.992 * emsq + 3651.957 * eoc;\n        g422 = -3581.690 + 16178.110 * em - 24462.770 * emsq + 12422.520 * eoc;\n        if (em > 0.715) {\n          g520 = -5149.66 + 29936.92 * em - 54087.36 * emsq + 31324.56 * eoc;\n        } else {\n          g520 = 1464.74 - 4664.75 * em + 3763.64 * emsq;\n        }\n      }\n      if (em < 0.7) {\n        g533 = -919.22770 + 4988.6100 * em - 9064.7700 * emsq + 5542.21 * eoc;\n        g521 = -822.71072 + 4568.6173 * em - 8491.4146 * emsq + 5337.524 * eoc;\n        g532 = -853.66600 + 4690.2500 * em - 8624.7700 * emsq + 5341.4 * eoc;\n      } else {\n        g533 = -37995.780 + 161616.52 * em - 229838.20 * emsq + 109377.94 * eoc;\n        g521 = -51752.104 + 218913.95 * em - 309468.16 * emsq + 146349.42 * eoc;\n        g532 = -40023.880 + 170470.89 * em - 242699.48 * emsq + 115605.82 * eoc;\n      }\n      sini2 = sinim * sinim;\n      f220 = 0.75 * (1.0 + 2.0 * cosim + cosisq);\n      f221 = 1.5 * sini2;\n      f321 = 1.875 * sinim * (1.0 - 2.0 * cosim - 3.0 * cosisq);\n      f322 = -1.875 * sinim * (1.0 + 2.0 * cosim - 3.0 * cosisq);\n      f441 = 35.0 * sini2 * f220;\n      f442 = 39.3750 * sini2 * sini2;\n      f522 = 9.84375 * sinim * (sini2 * (1.0 - 2.0 * cosim - 5.0 * cosisq) + 0.33333333 * (-2.0 + 4.0 * cosim + 6.0 * cosisq));\n      f523 = sinim * (4.92187512 * sini2 * (-2.0 - 4.0 * cosim + 10.0 * cosisq) + 6.56250012 * (1.0 + 2.0 * cosim - 3.0 * cosisq));\n      f542 = 29.53125 * sinim * (2.0 - 8.0 * cosim + cosisq * (-12.0 + 8.0 * cosim + 10.0 * cosisq));\n      f543 = 29.53125 * sinim * (-2.0 - 8.0 * cosim + cosisq * (12.0 + 8.0 * cosim - 10.0 * cosisq));\n      xno2 = nm * nm;\n      ainv2 = aonv * aonv;\n      temp1 = 3.0 * xno2 * ainv2;\n      temp = temp1 * root22;\n      d2201 = temp * f220 * g201;\n      d2211 = temp * f221 * g211;\n      temp1 *= aonv;\n      temp = temp1 * root32;\n      d3210 = temp * f321 * g310;\n      d3222 = temp * f322 * g322;\n      temp1 *= aonv;\n      temp = 2.0 * temp1 * root44;\n      d4410 = temp * f441 * g410;\n      d4422 = temp * f442 * g422;\n      temp1 *= aonv;\n      temp = temp1 * root52;\n      d5220 = temp * f522 * g520;\n      d5232 = temp * f523 * g532;\n      temp = 2.0 * temp1 * root54;\n      d5421 = temp * f542 * g521;\n      d5433 = temp * f543 * g533;\n      xlamo = (mo + nodeo + nodeo - (theta + theta)) % twoPi;\n      xfact = mdot + dmdt + 2.0 * (nodedot + dnodt - rptim) - no;\n      em = emo;\n      emsq = emsqo;\n    }\n\n    //  ---------------- synchronous resonance terms --------------\n    if (irez === 1) {\n      g200 = 1.0 + emsq * (-2.5 + 0.8125 * emsq);\n      g310 = 1.0 + 2.0 * emsq;\n      g300 = 1.0 + emsq * (-6.0 + 6.60937 * emsq);\n      f220 = 0.75 * (1.0 + cosim) * (1.0 + cosim);\n      f311 = 0.9375 * sinim * sinim * (1.0 + 3.0 * cosim) - 0.75 * (1.0 + cosim);\n      f330 = 1.0 + cosim;\n      f330 *= 1.875 * f330 * f330;\n      del1 = 3.0 * nm * nm * aonv * aonv;\n      del2 = 2.0 * del1 * f220 * g200 * q22;\n      del3 = 3.0 * del1 * f330 * g300 * q33 * aonv;\n      del1 = del1 * f311 * g310 * q31 * aonv;\n      xlamo = (mo + nodeo + argpo - theta) % twoPi;\n      xfact = mdot + xpidot + dmdt + domdt + dnodt - (no + rptim);\n    }\n\n    //  ------------ for sgp4, initialize the integrator ----------\n    xli = xlamo;\n    xni = no;\n    atime = 0.0;\n    nm = no + dndt;\n  }\n  return {\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    mm: mm,\n    nm: nm,\n    nodem: nodem,\n    irez: irez,\n    atime: atime,\n    d2201: d2201,\n    d2211: d2211,\n    d3210: d3210,\n    d3222: d3222,\n    d4410: d4410,\n    d4422: d4422,\n    d5220: d5220,\n    d5232: d5232,\n    d5421: d5421,\n    d5433: d5433,\n    dedt: dedt,\n    didt: didt,\n    dmdt: dmdt,\n    dndt: dndt,\n    dnodt: dnodt,\n    domdt: domdt,\n    del1: del1,\n    del2: del2,\n    del3: del3,\n    xfact: xfact,\n    xlamo: xlamo,\n    xli: xli,\n    xni: xni\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function gstime\n *\n *  this function finds the greenwich sidereal time.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jdut1       - julian date in ut1             days from 4713 bc\n *\n *  outputs       :\n *    gstime      - greenwich sidereal time        0 to 2pi rad\n *\n *  locals        :\n *    temp        - temporary variable for doubles   rad\n *    tut1        - julian centuries from the\n *                  jan 1, 2000 12 h epoch (ut1)\n *\n *  coupling      :\n *    none\n *\n *  references    :\n *    vallado       2004, 191, eq 3-45\n * --------------------------------------------------------------------------- */\nfunction gstimeInternal(jdut1) {\n  var tut1 = (jdut1 - 2451545.0) / 36525.0;\n  var temp = -6.2e-6 * tut1 * tut1 * tut1 + 0.093104 * tut1 * tut1 + (876600.0 * 3600 + 8640184.812866) * tut1 + 67310.54841; // # sec\n  temp = temp * deg2rad / 240.0 % twoPi; // 360/86400 = 1/240, to deg, to rad\n\n  //  ------------------------ check quadrants ---------------------\n  if (temp < 0.0) {\n    temp += twoPi;\n  }\n  return temp;\n}\nfunction gstime() {\n  if ((arguments.length <= 0 ? undefined : arguments[0]) instanceof Date || arguments.length > 1) {\n    return gstimeInternal(jday.apply(void 0, arguments));\n  }\n  return gstimeInternal.apply(void 0, arguments);\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure initl\n *\n *  this procedure initializes the sgp4 propagator. all the initialization is\n *    consolidated here instead of having multiple loops inside other routines.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    ecco        - eccentricity                           0.0 - 1.0\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    inclo       - inclination of satellite\n *    no          - mean motion of satellite\n *    satn        - satellite number\n *\n *  outputs       :\n *    ainv        - 1.0 / a\n *    ao          - semi major axis\n *    con41       -\n *    con42       - 1.0 - 5.0 cos(i)\n *    cosio       - cosine of inclination\n *    cosio2      - cosio squared\n *    eccsq       - eccentricity squared\n *    method      - flag for deep space                    'd', 'n'\n *    omeosq      - 1.0 - ecco * ecco\n *    posq        - semi-parameter squared\n *    rp          - radius of perigee\n *    rteosq      - square root of (1.0 - ecco*ecco)\n *    sinio       - sine of inclination\n *    gsto        - gst at time of observation               rad\n *    no          - mean motion of satellite\n *\n *  locals        :\n *    ak          -\n *    d1          -\n *    del         -\n *    adel        -\n *    po          -\n *\n *  coupling      :\n *    getgravconst\n *    gstime      - find greenwich sidereal time from the julian date\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction initl(options) {\n  var ecco = options.ecco,\n    epoch = options.epoch,\n    inclo = options.inclo,\n    opsmode = options.opsmode;\n  var no = options.no;\n\n  // sgp4fix use old way of finding gst\n  // ----------------------- earth constants ---------------------\n  // sgp4fix identify constants and allow alternate values\n\n  // ------------- calculate auxillary epoch quantities ----------\n  var eccsq = ecco * ecco;\n  var omeosq = 1.0 - eccsq;\n  var rteosq = Math.sqrt(omeosq);\n  var cosio = Math.cos(inclo);\n  var cosio2 = cosio * cosio;\n\n  // ------------------ un-kozai the mean motion -----------------\n  var ak = Math.pow(xke / no, x2o3);\n  var d1 = 0.75 * j2 * (3.0 * cosio2 - 1.0) / (rteosq * omeosq);\n  var delPrime = d1 / (ak * ak);\n  var adel = ak * (1.0 - delPrime * delPrime - delPrime * (1.0 / 3.0 + 134.0 * delPrime * delPrime / 81.0));\n  delPrime = d1 / (adel * adel);\n  no /= 1.0 + delPrime;\n  var ao = Math.pow(xke / no, x2o3);\n  var sinio = Math.sin(inclo);\n  var po = ao * omeosq;\n  var con42 = 1.0 - 5.0 * cosio2;\n  var con41 = -con42 - cosio2 - cosio2;\n  var ainv = 1.0 / ao;\n  var posq = po * po;\n  var rp = ao * (1.0 - ecco);\n  var method = 'n';\n\n  //  sgp4fix modern approach to finding sidereal time\n  var gsto;\n  if (opsmode === 'a') {\n    //  sgp4fix use old way of finding gst\n    //  count integer number of days from 0 jan 1970\n    var ts70 = epoch - 7305.0;\n    var ds70 = Math.floor(ts70 + 1.0e-8);\n    var tfrac = ts70 - ds70;\n\n    //  find greenwich location at epoch\n    var c1 = 1.72027916940703639e-2; // eslint-disable-line no-loss-of-precision\n    var thgr70 = 1.7321343856509374; // eslint-disable-line no-loss-of-precision\n    var fk5r = 5.07551419432269442e-15; // eslint-disable-line no-loss-of-precision\n    var c1p2p = c1 + twoPi;\n    gsto = (thgr70 + c1 * ds70 + c1p2p * tfrac + ts70 * ts70 * fk5r) % twoPi;\n    if (gsto < 0.0) {\n      gsto += twoPi;\n    }\n  } else {\n    gsto = gstime(epoch + 2433281.5);\n  }\n  return {\n    no: no,\n    method: method,\n    ainv: ainv,\n    ao: ao,\n    con41: con41,\n    con42: con42,\n    cosio: cosio,\n    cosio2: cosio2,\n    eccsq: eccsq,\n    omeosq: omeosq,\n    posq: posq,\n    rp: rp,\n    rteosq: rteosq,\n    sinio: sinio,\n    gsto: gsto\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dspace\n *\n *  this procedure provides deep space contributions to mean elements for\n *    perturbing third body.  these effects have been averaged over one\n *    revolution of the sun and moon.  for earth resonance effects, the\n *    effects have been averaged over no revolutions of the satellite.\n *    (mean motion)\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433 -\n *    dedt        -\n *    del1, del2, del3  -\n *    didt        -\n *    dmdt        -\n *    dnodt       -\n *    domdt       -\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    argpo       - argument of perigee\n *    argpdot     - argument of perigee dot (rate)\n *    t           - time\n *    tc          -\n *    gsto        - gst\n *    xfact       -\n *    xlamo       -\n *    no          - mean motion\n *    atime       -\n *    em          - eccentricity\n *    ft          -\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    atime       -\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         -\n *    nodem       - right ascension of ascending node\n *    dndt        -\n *    nm          - mean motion\n *\n *  locals        :\n *    delt        -\n *    ft          -\n *    theta       -\n *    x2li        -\n *    x2omi       -\n *    xl          -\n *    xldot       -\n *    xnddt       -\n *    xndt        -\n *    xomi        -\n *\n *  coupling      :\n *    none        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dspace(options) {\n  var irez = options.irez,\n    d2201 = options.d2201,\n    d2211 = options.d2211,\n    d3210 = options.d3210,\n    d3222 = options.d3222,\n    d4410 = options.d4410,\n    d4422 = options.d4422,\n    d5220 = options.d5220,\n    d5232 = options.d5232,\n    d5421 = options.d5421,\n    d5433 = options.d5433,\n    dedt = options.dedt,\n    del1 = options.del1,\n    del2 = options.del2,\n    del3 = options.del3,\n    didt = options.didt,\n    dmdt = options.dmdt,\n    dnodt = options.dnodt,\n    domdt = options.domdt,\n    argpo = options.argpo,\n    argpdot = options.argpdot,\n    t = options.t,\n    tc = options.tc,\n    gsto = options.gsto,\n    xfact = options.xfact,\n    xlamo = options.xlamo,\n    no = options.no;\n  var atime = options.atime,\n    em = options.em,\n    argpm = options.argpm,\n    inclm = options.inclm,\n    xli = options.xli,\n    mm = options.mm,\n    xni = options.xni,\n    nodem = options.nodem,\n    nm = options.nm;\n  var fasx2 = 0.13130908;\n  var fasx4 = 2.8843198;\n  var fasx6 = 0.37448087;\n  var g22 = 5.7686396;\n  var g32 = 0.95240898;\n  var g44 = 1.8014998;\n  var g52 = 1.0508330;\n  var g54 = 4.4108898;\n  // eslint-disable-next-line no-loss-of-precision\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n  var stepp = 720.0;\n  var stepn = -720.0;\n  var step2 = 259200.0;\n  var delt;\n  var x2li;\n  var x2omi;\n  var xl;\n  var xldot;\n  var xnddt;\n  var xndt;\n  var xomi;\n  var dndt = 0.0;\n  var ft = 0.0;\n\n  //  ----------- calculate deep space resonance effects -----------\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t;\n\n  // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm = -inclm;\n  //   argpm = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  /* - update resonances : numerical (euler-maclaurin) integration - */\n  /* ------------------------- epoch restart ----------------------  */\n  //   sgp4fix for propagator problems\n  //   the following integration works for negative time steps and periods\n  //   the specific changes are unknown because the original code was so convoluted\n\n  // sgp4fix take out atime = 0.0 and fix for faster operation\n\n  if (irez !== 0) {\n    //  sgp4fix streamline check\n    if (atime === 0.0 || t * atime <= 0.0 || Math.abs(t) < Math.abs(atime)) {\n      atime = 0.0;\n      xni = no;\n      xli = xlamo;\n    }\n\n    // sgp4fix move check outside loop\n    if (t > 0.0) {\n      delt = stepp;\n    } else {\n      delt = stepn;\n    }\n    var iretn = 381; // added for do loop\n    while (iretn === 381) {\n      //  ------------------- dot terms calculated -------------\n      //  ----------- near - synchronous resonance terms -------\n      if (irez !== 2) {\n        xndt = del1 * Math.sin(xli - fasx2) + del2 * Math.sin(2.0 * (xli - fasx4)) + del3 * Math.sin(3.0 * (xli - fasx6));\n        xldot = xni + xfact;\n        xnddt = del1 * Math.cos(xli - fasx2) + 2.0 * del2 * Math.cos(2.0 * (xli - fasx4)) + 3.0 * del3 * Math.cos(3.0 * (xli - fasx6));\n        xnddt *= xldot;\n      } else {\n        // --------- near - half-day resonance terms --------\n        xomi = argpo + argpdot * atime;\n        x2omi = xomi + xomi;\n        x2li = xli + xli;\n        xndt = d2201 * Math.sin(x2omi + xli - g22) + d2211 * Math.sin(xli - g22) + d3210 * Math.sin(xomi + xli - g32) + d3222 * Math.sin(-xomi + xli - g32) + d4410 * Math.sin(x2omi + x2li - g44) + d4422 * Math.sin(x2li - g44) + d5220 * Math.sin(xomi + xli - g52) + d5232 * Math.sin(-xomi + xli - g52) + d5421 * Math.sin(xomi + x2li - g54) + d5433 * Math.sin(-xomi + x2li - g54);\n        xldot = xni + xfact;\n        xnddt = d2201 * Math.cos(x2omi + xli - g22) + d2211 * Math.cos(xli - g22) + d3210 * Math.cos(xomi + xli - g32) + d3222 * Math.cos(-xomi + xli - g32) + d5220 * Math.cos(xomi + xli - g52) + d5232 * Math.cos(-xomi + xli - g52) + 2.0 * (d4410 * Math.cos(x2omi + x2li - g44) + d4422 * Math.cos(x2li - g44) + d5421 * Math.cos(xomi + x2li - g54) + d5433 * Math.cos(-xomi + x2li - g54));\n        xnddt *= xldot;\n      }\n\n      //  ----------------------- integrator -------------------\n      //  sgp4fix move end checks to end of routine\n      if (Math.abs(t - atime) >= stepp) {\n        iretn = 381;\n      } else {\n        ft = t - atime;\n        iretn = 0;\n      }\n      if (iretn === 381) {\n        xli += xldot * delt + xndt * step2;\n        xni += xndt * delt + xnddt * step2;\n        atime += delt;\n      }\n    }\n    nm = xni + xndt * ft + xnddt * ft * ft * 0.5;\n    xl = xli + xldot * ft + xndt * ft * ft * 0.5;\n    if (irez !== 1) {\n      mm = xl - 2.0 * nodem + 2.0 * theta;\n      dndt = nm - no;\n    } else {\n      mm = xl - nodem - argpm + theta;\n      dndt = nm - no;\n    }\n    nm = no + dndt;\n  }\n  return {\n    atime: atime,\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    xli: xli,\n    mm: mm,\n    xni: xni,\n    nodem: nodem,\n    dndt: dndt,\n    nm: nm\n  };\n}\n\n/*----------------------------------------------------------------------------\n *\n *                             procedure sgp4\n *\n *  this procedure is the sgp4 prediction model from space command. this is an\n *    updated and combined version of sgp4 and sdp4, which were originally\n *    published separately in spacetrack report //3. this version follows the\n *    methodology from the aiaa paper (2006) describing the history and\n *    development of the code.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    satrec  - initialised structure from sgp4init() call.\n *    tsince  - time since epoch (minutes)\n *\n *  outputs       :\n *    r           - position vector                     km\n *    v           - velocity                            km/sec\n *  return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    am          -\n *    axnl, aynl        -\n *    betal       -\n *    cosim   , sinim   , cosomm  , sinomm  , cnod    , snod    , cos2u   ,\n *    sin2u   , coseo1  , sineo1  , cosi    , sini    , cosip   , sinip   ,\n *    cosisq  , cossu   , sinsu   , cosu    , sinu\n *    delm        -\n *    delomg      -\n *    dndt        -\n *    eccm        -\n *    emsq        -\n *    ecose       -\n *    el2         -\n *    eo1         -\n *    eccp        -\n *    esine       -\n *    argpm       -\n *    argpp       -\n *    omgadf      -\n *    pl          -\n *    r           -\n *    rtemsq      -\n *    rdotl       -\n *    rl          -\n *    rvdot       -\n *    rvdotl      -\n *    su          -\n *    t2  , t3   , t4    , tc\n *    tem5, temp , temp1 , temp2  , tempa  , tempe  , templ\n *    u   , ux   , uy    , uz     , vx     , vy     , vz\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right asc of ascending node\n *    xinc        -\n *    xincp       -\n *    xl          -\n *    xlm         -\n *    mp          -\n *    xmdf        -\n *    xmx         -\n *    xmy         -\n *    nodedf      -\n *    xnode       -\n *    nodep       -\n *    np          -\n *\n *  coupling      :\n *    getgravconst-\n *    dpper\n *    dspace\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report //3 1980\n *    hoots, norad spacetrack report //6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction sgp4(satrec, tsince) {\n  /* eslint-disable no-param-reassign */\n\n  var coseo1;\n  var sineo1;\n  var cosip;\n  var sinip;\n  var cosisq;\n  var delm;\n  var delomg;\n  var eo1;\n  var argpm;\n  var argpp;\n  var su;\n  var t3;\n  var t4;\n  var tc;\n  var tem5;\n  var temp;\n  var tempa;\n  var tempe;\n  var templ;\n  var inclm;\n  var mm;\n  var nm;\n  var nodem;\n  var xincp;\n  var xlm;\n  var mp;\n  var nodep;\n\n  /* ------------------ set mathematical constants --------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n\n  var temp4 = 1.5e-12;\n\n  // --------------------- clear sgp4 error flag -----------------\n  satrec.t = tsince;\n  satrec.error = 0;\n\n  //  ------- update for secular gravity and atmospheric drag -----\n  var xmdf = satrec.mo + satrec.mdot * satrec.t;\n  var argpdf = satrec.argpo + satrec.argpdot * satrec.t;\n  var nodedf = satrec.nodeo + satrec.nodedot * satrec.t;\n  argpm = argpdf;\n  mm = xmdf;\n  var t2 = satrec.t * satrec.t;\n  nodem = nodedf + satrec.nodecf * t2;\n  tempa = 1.0 - satrec.cc1 * satrec.t;\n  tempe = satrec.bstar * satrec.cc4 * satrec.t;\n  templ = satrec.t2cof * t2;\n  if (satrec.isimp !== 1) {\n    delomg = satrec.omgcof * satrec.t;\n    //  sgp4fix use mutliply for speed instead of pow\n    var delmtemp = 1.0 + satrec.eta * Math.cos(xmdf);\n    delm = satrec.xmcof * (delmtemp * delmtemp * delmtemp - satrec.delmo);\n    temp = delomg + delm;\n    mm = xmdf + temp;\n    argpm = argpdf - temp;\n    t3 = t2 * satrec.t;\n    t4 = t3 * satrec.t;\n    tempa = tempa - satrec.d2 * t2 - satrec.d3 * t3 - satrec.d4 * t4;\n    tempe += satrec.bstar * satrec.cc5 * (Math.sin(mm) - satrec.sinmao);\n    templ = templ + satrec.t3cof * t3 + t4 * (satrec.t4cof + satrec.t * satrec.t5cof);\n  }\n  nm = satrec.no;\n  var em = satrec.ecco;\n  inclm = satrec.inclo;\n  if (satrec.method === 'd') {\n    tc = satrec.t;\n    var dspaceOptions = {\n      irez: satrec.irez,\n      d2201: satrec.d2201,\n      d2211: satrec.d2211,\n      d3210: satrec.d3210,\n      d3222: satrec.d3222,\n      d4410: satrec.d4410,\n      d4422: satrec.d4422,\n      d5220: satrec.d5220,\n      d5232: satrec.d5232,\n      d5421: satrec.d5421,\n      d5433: satrec.d5433,\n      dedt: satrec.dedt,\n      del1: satrec.del1,\n      del2: satrec.del2,\n      del3: satrec.del3,\n      didt: satrec.didt,\n      dmdt: satrec.dmdt,\n      dnodt: satrec.dnodt,\n      domdt: satrec.domdt,\n      argpo: satrec.argpo,\n      argpdot: satrec.argpdot,\n      t: satrec.t,\n      tc: tc,\n      gsto: satrec.gsto,\n      xfact: satrec.xfact,\n      xlamo: satrec.xlamo,\n      no: satrec.no,\n      atime: satrec.atime,\n      em: em,\n      argpm: argpm,\n      inclm: inclm,\n      xli: satrec.xli,\n      mm: mm,\n      xni: satrec.xni,\n      nodem: nodem,\n      nm: nm\n    };\n    var dspaceResult = dspace(dspaceOptions);\n    em = dspaceResult.em;\n    argpm = dspaceResult.argpm;\n    inclm = dspaceResult.inclm;\n    mm = dspaceResult.mm;\n    nodem = dspaceResult.nodem;\n    nm = dspaceResult.nm;\n  }\n  if (nm <= 0.0) {\n    // printf(\"// error nm %f\\n\", nm);\n    satrec.error = 2;\n    // sgp4fix add return\n    return [false, false];\n  }\n  var am = Math.pow(xke / nm, x2o3) * tempa * tempa;\n  nm = xke / Math.pow(am, 1.5);\n  em -= tempe;\n\n  // fix tolerance for error recognition\n  // sgp4fix am is fixed from the previous nm check\n  if (em >= 1.0 || em < -0.001) {\n    // || (am < 0.95)\n    // printf(\"// error em %f\\n\", em);\n    satrec.error = 1;\n    // sgp4fix to return if there is an error in eccentricity\n    return [false, false];\n  }\n\n  //  sgp4fix fix tolerance to avoid a divide by zero\n  if (em < 1.0e-6) {\n    em = 1.0e-6;\n  }\n  mm += satrec.no * templ;\n  xlm = mm + argpm + nodem;\n  nodem %= twoPi;\n  argpm %= twoPi;\n  xlm %= twoPi;\n  mm = (xlm - argpm - nodem) % twoPi;\n\n  // ----------------- compute extra mean quantities -------------\n  var sinim = Math.sin(inclm);\n  var cosim = Math.cos(inclm);\n\n  // -------------------- add lunar-solar periodics --------------\n  var ep = em;\n  xincp = inclm;\n  argpp = argpm;\n  nodep = nodem;\n  mp = mm;\n  sinip = sinim;\n  cosip = cosim;\n  if (satrec.method === 'd') {\n    var dpperParameters = {\n      inclo: satrec.inclo,\n      init: 'n',\n      ep: ep,\n      inclp: xincp,\n      nodep: nodep,\n      argpp: argpp,\n      mp: mp,\n      opsmode: satrec.operationmode\n    };\n    var dpperResult = dpper(satrec, dpperParameters);\n    ep = dpperResult.ep;\n    nodep = dpperResult.nodep;\n    argpp = dpperResult.argpp;\n    mp = dpperResult.mp;\n    xincp = dpperResult.inclp;\n    if (xincp < 0.0) {\n      xincp = -xincp;\n      nodep += pi;\n      argpp -= pi;\n    }\n    if (ep < 0.0 || ep > 1.0) {\n      //  printf(\"// error ep %f\\n\", ep);\n      satrec.error = 3;\n      //  sgp4fix add return\n      return [false, false];\n    }\n  }\n\n  //  -------------------- long period periodics ------------------\n  if (satrec.method === 'd') {\n    sinip = Math.sin(xincp);\n    cosip = Math.cos(xincp);\n    satrec.aycof = -0.5 * j3oj2 * sinip;\n\n    //  sgp4fix for divide by zero for xincp = 180 deg\n    if (Math.abs(cosip + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / (1.0 + cosip);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / temp4;\n    }\n  }\n  var axnl = ep * Math.cos(argpp);\n  temp = 1.0 / (am * (1.0 - ep * ep));\n  var aynl = ep * Math.sin(argpp) + temp * satrec.aycof;\n  var xl = mp + argpp + nodep + temp * satrec.xlcof * axnl;\n\n  // --------------------- solve kepler's equation ---------------\n  var u = (xl - nodep) % twoPi;\n  eo1 = u;\n  tem5 = 9999.9;\n  var ktr = 1;\n\n  //    sgp4fix for kepler iteration\n  //    the following iteration needs better limits on corrections\n  while (Math.abs(tem5) >= 1.0e-12 && ktr <= 10) {\n    sineo1 = Math.sin(eo1);\n    coseo1 = Math.cos(eo1);\n    tem5 = 1.0 - coseo1 * axnl - sineo1 * aynl;\n    tem5 = (u - aynl * coseo1 + axnl * sineo1 - eo1) / tem5;\n    if (Math.abs(tem5) >= 0.95) {\n      if (tem5 > 0.0) {\n        tem5 = 0.95;\n      } else {\n        tem5 = -0.95;\n      }\n    }\n    eo1 += tem5;\n    ktr += 1;\n  }\n\n  //  ------------- short period preliminary quantities -----------\n  var ecose = axnl * coseo1 + aynl * sineo1;\n  var esine = axnl * sineo1 - aynl * coseo1;\n  var el2 = axnl * axnl + aynl * aynl;\n  var pl = am * (1.0 - el2);\n  if (pl < 0.0) {\n    //  printf(\"// error pl %f\\n\", pl);\n    satrec.error = 4;\n    //  sgp4fix add return\n    return [false, false];\n  }\n  var rl = am * (1.0 - ecose);\n  var rdotl = Math.sqrt(am) * esine / rl;\n  var rvdotl = Math.sqrt(pl) / rl;\n  var betal = Math.sqrt(1.0 - el2);\n  temp = esine / (1.0 + betal);\n  var sinu = am / rl * (sineo1 - aynl - axnl * temp);\n  var cosu = am / rl * (coseo1 - axnl + aynl * temp);\n  su = Math.atan2(sinu, cosu);\n  var sin2u = (cosu + cosu) * sinu;\n  var cos2u = 1.0 - 2.0 * sinu * sinu;\n  temp = 1.0 / pl;\n  var temp1 = 0.5 * j2 * temp;\n  var temp2 = temp1 * temp;\n\n  // -------------- update for short period periodics ------------\n  if (satrec.method === 'd') {\n    cosisq = cosip * cosip;\n    satrec.con41 = 3.0 * cosisq - 1.0;\n    satrec.x1mth2 = 1.0 - cosisq;\n    satrec.x7thm1 = 7.0 * cosisq - 1.0;\n  }\n  var mrt = rl * (1.0 - 1.5 * temp2 * betal * satrec.con41) + 0.5 * temp1 * satrec.x1mth2 * cos2u;\n\n  // sgp4fix for decaying satellites\n  if (mrt < 1.0) {\n    // printf(\"// decay condition %11.6f \\n\",mrt);\n    satrec.error = 6;\n    return {\n      position: false,\n      velocity: false\n    };\n  }\n  su -= 0.25 * temp2 * satrec.x7thm1 * sin2u;\n  var xnode = nodep + 1.5 * temp2 * cosip * sin2u;\n  var xinc = xincp + 1.5 * temp2 * cosip * sinip * cos2u;\n  var mvt = rdotl - nm * temp1 * satrec.x1mth2 * sin2u / xke;\n  var rvdot = rvdotl + nm * temp1 * (satrec.x1mth2 * cos2u + 1.5 * satrec.con41) / xke;\n\n  // --------------------- orientation vectors -------------------\n  var sinsu = Math.sin(su);\n  var cossu = Math.cos(su);\n  var snod = Math.sin(xnode);\n  var cnod = Math.cos(xnode);\n  var sini = Math.sin(xinc);\n  var cosi = Math.cos(xinc);\n  var xmx = -snod * cosi;\n  var xmy = cnod * cosi;\n  var ux = xmx * sinsu + cnod * cossu;\n  var uy = xmy * sinsu + snod * cossu;\n  var uz = sini * sinsu;\n  var vx = xmx * cossu - cnod * sinsu;\n  var vy = xmy * cossu - snod * sinsu;\n  var vz = sini * cossu;\n\n  // --------- position and velocity (in km and km/sec) ----------\n  var r = {\n    x: mrt * ux * earthRadius,\n    y: mrt * uy * earthRadius,\n    z: mrt * uz * earthRadius\n  };\n  var v = {\n    x: (mvt * ux + rvdot * vx) * vkmpersec,\n    y: (mvt * uy + rvdot * vy) * vkmpersec,\n    z: (mvt * uz + rvdot * vz) * vkmpersec\n  };\n  return {\n    position: r,\n    velocity: v\n  };\n\n  /* eslint-enable no-param-reassign */\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                             procedure sgp4init\n *\n *  this procedure initializes variables for sgp4.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    satn        - satellite number\n *    bstar       - sgp4 type drag coefficient              kg/m2er\n *    ecco        - eccentricity\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    argpo       - argument of perigee (output if ds)\n *    inclo       - inclination\n *    mo          - mean anomaly (output if ds)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *\n *  outputs       :\n *    rec      - common values for subsequent calls\n *    return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    cnodm  , snodm  , cosim  , sinim  , cosomm , sinomm\n *    cc1sq  , cc2    , cc3\n *    coef   , coef1\n *    cosio4      -\n *    day         -\n *    dndt        -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    eeta        -\n *    etasq       -\n *    gam         -\n *    argpm       - argument of perigee\n *    nodem       -\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    perige      - perigee\n *    pinvsq      -\n *    psisq       -\n *    qzms24      -\n *    rtemsq      -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    sfour       -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7         -\n *    sz1, sz2, sz3\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    tc          -\n *    temp        -\n *    temp1, temp2, temp3       -\n *    tsi         -\n *    xpidot      -\n *    xhdot1      -\n *    z1, z2, z3          -\n *    z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *\n *  coupling      :\n *    getgravconst-\n *    initl       -\n *    dscom       -\n *    dpper       -\n *    dsinit      -\n *    sgp4        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction sgp4init(satrec, options) {\n  /* eslint-disable no-param-reassign */\n\n  var opsmode = options.opsmode,\n    satn = options.satn,\n    epoch = options.epoch,\n    xbstar = options.xbstar,\n    xecco = options.xecco,\n    xargpo = options.xargpo,\n    xinclo = options.xinclo,\n    xmo = options.xmo,\n    xno = options.xno,\n    xnodeo = options.xnodeo;\n  var cosim;\n  var sinim;\n  var cc1sq;\n  var cc2;\n  var cc3;\n  var coef;\n  var coef1;\n  var cosio4;\n  var em;\n  var emsq;\n  var eeta;\n  var etasq;\n  var argpm;\n  var nodem;\n  var inclm;\n  var mm;\n  var nm;\n  var perige;\n  var pinvsq;\n  var psisq;\n  var qzms24;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var sfour;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var sz1;\n  var sz3;\n  var sz11;\n  var sz13;\n  var sz21;\n  var sz23;\n  var sz31;\n  var sz33;\n  var tc;\n  var temp;\n  var temp1;\n  var temp2;\n  var temp3;\n  var tsi;\n  var xpidot;\n  var xhdot1;\n  var z1;\n  var z3;\n  var z11;\n  var z13;\n  var z21;\n  var z23;\n  var z31;\n  var z33;\n\n  /* ------------------------ initialization --------------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + Math.cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n  var temp4 = 1.5e-12;\n\n  // ----------- set all near earth variables to zero ------------\n  satrec.isimp = 0;\n  satrec.method = 'n';\n  satrec.aycof = 0.0;\n  satrec.con41 = 0.0;\n  satrec.cc1 = 0.0;\n  satrec.cc4 = 0.0;\n  satrec.cc5 = 0.0;\n  satrec.d2 = 0.0;\n  satrec.d3 = 0.0;\n  satrec.d4 = 0.0;\n  satrec.delmo = 0.0;\n  satrec.eta = 0.0;\n  satrec.argpdot = 0.0;\n  satrec.omgcof = 0.0;\n  satrec.sinmao = 0.0;\n  satrec.t = 0.0;\n  satrec.t2cof = 0.0;\n  satrec.t3cof = 0.0;\n  satrec.t4cof = 0.0;\n  satrec.t5cof = 0.0;\n  satrec.x1mth2 = 0.0;\n  satrec.x7thm1 = 0.0;\n  satrec.mdot = 0.0;\n  satrec.nodedot = 0.0;\n  satrec.xlcof = 0.0;\n  satrec.xmcof = 0.0;\n  satrec.nodecf = 0.0;\n\n  // ----------- set all deep space variables to zero ------------\n  satrec.irez = 0;\n  satrec.d2201 = 0.0;\n  satrec.d2211 = 0.0;\n  satrec.d3210 = 0.0;\n  satrec.d3222 = 0.0;\n  satrec.d4410 = 0.0;\n  satrec.d4422 = 0.0;\n  satrec.d5220 = 0.0;\n  satrec.d5232 = 0.0;\n  satrec.d5421 = 0.0;\n  satrec.d5433 = 0.0;\n  satrec.dedt = 0.0;\n  satrec.del1 = 0.0;\n  satrec.del2 = 0.0;\n  satrec.del3 = 0.0;\n  satrec.didt = 0.0;\n  satrec.dmdt = 0.0;\n  satrec.dnodt = 0.0;\n  satrec.domdt = 0.0;\n  satrec.e3 = 0.0;\n  satrec.ee2 = 0.0;\n  satrec.peo = 0.0;\n  satrec.pgho = 0.0;\n  satrec.pho = 0.0;\n  satrec.pinco = 0.0;\n  satrec.plo = 0.0;\n  satrec.se2 = 0.0;\n  satrec.se3 = 0.0;\n  satrec.sgh2 = 0.0;\n  satrec.sgh3 = 0.0;\n  satrec.sgh4 = 0.0;\n  satrec.sh2 = 0.0;\n  satrec.sh3 = 0.0;\n  satrec.si2 = 0.0;\n  satrec.si3 = 0.0;\n  satrec.sl2 = 0.0;\n  satrec.sl3 = 0.0;\n  satrec.sl4 = 0.0;\n  satrec.gsto = 0.0;\n  satrec.xfact = 0.0;\n  satrec.xgh2 = 0.0;\n  satrec.xgh3 = 0.0;\n  satrec.xgh4 = 0.0;\n  satrec.xh2 = 0.0;\n  satrec.xh3 = 0.0;\n  satrec.xi2 = 0.0;\n  satrec.xi3 = 0.0;\n  satrec.xl2 = 0.0;\n  satrec.xl3 = 0.0;\n  satrec.xl4 = 0.0;\n  satrec.xlamo = 0.0;\n  satrec.zmol = 0.0;\n  satrec.zmos = 0.0;\n  satrec.atime = 0.0;\n  satrec.xli = 0.0;\n  satrec.xni = 0.0;\n\n  // sgp4fix - note the following variables are also passed directly via satrec.\n  // it is possible to streamline the sgp4init call by deleting the \"x\"\n  // variables, but the user would need to set the satrec.* values first. we\n  // include the additional assignments in case twoline2rv is not used.\n\n  satrec.bstar = xbstar;\n  satrec.ecco = xecco;\n  satrec.argpo = xargpo;\n  satrec.inclo = xinclo;\n  satrec.mo = xmo;\n  satrec.no = xno;\n  satrec.nodeo = xnodeo;\n\n  //  sgp4fix add opsmode\n  satrec.operationmode = opsmode;\n\n  // ------------------------ earth constants -----------------------\n  // sgp4fix identify constants and allow alternate values\n\n  var ss = 78.0 / earthRadius + 1.0;\n  // sgp4fix use multiply for speed instead of pow\n  var qzms2ttemp = (120.0 - 78.0) / earthRadius;\n  var qzms2t = qzms2ttemp * qzms2ttemp * qzms2ttemp * qzms2ttemp;\n  satrec.init = 'y';\n  satrec.t = 0.0;\n  var initlOptions = {\n    satn: satn,\n    ecco: satrec.ecco,\n    epoch: epoch,\n    inclo: satrec.inclo,\n    no: satrec.no,\n    method: satrec.method,\n    opsmode: satrec.operationmode\n  };\n  var initlResult = initl(initlOptions);\n  var ao = initlResult.ao,\n    con42 = initlResult.con42,\n    cosio = initlResult.cosio,\n    cosio2 = initlResult.cosio2,\n    eccsq = initlResult.eccsq,\n    omeosq = initlResult.omeosq,\n    posq = initlResult.posq,\n    rp = initlResult.rp,\n    rteosq = initlResult.rteosq,\n    sinio = initlResult.sinio;\n  satrec.no = initlResult.no;\n  satrec.con41 = initlResult.con41;\n  satrec.gsto = initlResult.gsto;\n  satrec.a = Math.pow(satrec.no * tumin, -2.0 / 3.0);\n  satrec.alta = satrec.a * (1.0 + satrec.ecco) - 1.0;\n  satrec.altp = satrec.a * (1.0 - satrec.ecco) - 1.0;\n  satrec.error = 0;\n\n  // sgp4fix remove this check as it is unnecessary\n  // the mrt check in sgp4 handles decaying satellite cases even if the starting\n  // condition is below the surface of te earth\n  // if (rp < 1.0)\n  // {\n  //   printf(\"// *** satn%d epoch elts sub-orbital ***\\n\", satn);\n  //   satrec.error = 5;\n  // }\n\n  if (omeosq >= 0.0 || satrec.no >= 0.0) {\n    satrec.isimp = 0;\n    if (rp < 220.0 / earthRadius + 1.0) {\n      satrec.isimp = 1;\n    }\n    sfour = ss;\n    qzms24 = qzms2t;\n    perige = (rp - 1.0) * earthRadius;\n\n    // - for perigees below 156 km, s and qoms2t are altered -\n    if (perige < 156.0) {\n      sfour = perige - 78.0;\n      if (perige < 98.0) {\n        sfour = 20.0;\n      }\n\n      // sgp4fix use multiply for speed instead of pow\n      var qzms24temp = (120.0 - sfour) / earthRadius;\n      qzms24 = qzms24temp * qzms24temp * qzms24temp * qzms24temp;\n      sfour = sfour / earthRadius + 1.0;\n    }\n    pinvsq = 1.0 / posq;\n    tsi = 1.0 / (ao - sfour);\n    satrec.eta = ao * satrec.ecco * tsi;\n    etasq = satrec.eta * satrec.eta;\n    eeta = satrec.ecco * satrec.eta;\n    psisq = Math.abs(1.0 - etasq);\n    coef = qzms24 * Math.pow(tsi, 4.0);\n    coef1 = coef / Math.pow(psisq, 3.5);\n    cc2 = coef1 * satrec.no * (ao * (1.0 + 1.5 * etasq + eeta * (4.0 + etasq)) + 0.375 * j2 * tsi / psisq * satrec.con41 * (8.0 + 3.0 * etasq * (8.0 + etasq)));\n    satrec.cc1 = satrec.bstar * cc2;\n    cc3 = 0.0;\n    if (satrec.ecco > 1.0e-4) {\n      cc3 = -2.0 * coef * tsi * j3oj2 * satrec.no * sinio / satrec.ecco;\n    }\n    satrec.x1mth2 = 1.0 - cosio2;\n    satrec.cc4 = 2.0 * satrec.no * coef1 * ao * omeosq * (satrec.eta * (2.0 + 0.5 * etasq) + satrec.ecco * (0.5 + 2.0 * etasq) - j2 * tsi / (ao * psisq) * (-3.0 * satrec.con41 * (1.0 - 2.0 * eeta + etasq * (1.5 - 0.5 * eeta)) + 0.75 * satrec.x1mth2 * (2.0 * etasq - eeta * (1.0 + etasq)) * Math.cos(2.0 * satrec.argpo)));\n    satrec.cc5 = 2.0 * coef1 * ao * omeosq * (1.0 + 2.75 * (etasq + eeta) + eeta * etasq);\n    cosio4 = cosio2 * cosio2;\n    temp1 = 1.5 * j2 * pinvsq * satrec.no;\n    temp2 = 0.5 * temp1 * j2 * pinvsq;\n    temp3 = -0.46875 * j4 * pinvsq * pinvsq * satrec.no;\n    satrec.mdot = satrec.no + 0.5 * temp1 * rteosq * satrec.con41 + 0.0625 * temp2 * rteosq * (13.0 - 78.0 * cosio2 + 137.0 * cosio4);\n    satrec.argpdot = -0.5 * temp1 * con42 + 0.0625 * temp2 * (7.0 - 114.0 * cosio2 + 395.0 * cosio4) + temp3 * (3.0 - 36.0 * cosio2 + 49.0 * cosio4);\n    xhdot1 = -temp1 * cosio;\n    satrec.nodedot = xhdot1 + (0.5 * temp2 * (4.0 - 19.0 * cosio2) + 2.0 * temp3 * (3.0 - 7.0 * cosio2)) * cosio;\n    xpidot = satrec.argpdot + satrec.nodedot;\n    satrec.omgcof = satrec.bstar * cc3 * Math.cos(satrec.argpo);\n    satrec.xmcof = 0.0;\n    if (satrec.ecco > 1.0e-4) {\n      satrec.xmcof = -x2o3 * coef * satrec.bstar / eeta;\n    }\n    satrec.nodecf = 3.5 * omeosq * xhdot1 * satrec.cc1;\n    satrec.t2cof = 1.5 * satrec.cc1;\n\n    // sgp4fix for divide by zero with xinco = 180 deg\n    if (Math.abs(cosio + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / (1.0 + cosio);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / temp4;\n    }\n    satrec.aycof = -0.5 * j3oj2 * sinio;\n\n    // sgp4fix use multiply for speed instead of pow\n    var delmotemp = 1.0 + satrec.eta * Math.cos(satrec.mo);\n    satrec.delmo = delmotemp * delmotemp * delmotemp;\n    satrec.sinmao = Math.sin(satrec.mo);\n    satrec.x7thm1 = 7.0 * cosio2 - 1.0;\n\n    // --------------- deep space initialization -------------\n    if (2 * pi / satrec.no >= 225.0) {\n      satrec.method = 'd';\n      satrec.isimp = 1;\n      tc = 0.0;\n      inclm = satrec.inclo;\n      var dscomOptions = {\n        epoch: epoch,\n        ep: satrec.ecco,\n        argpp: satrec.argpo,\n        tc: tc,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        np: satrec.no,\n        e3: satrec.e3,\n        ee2: satrec.ee2,\n        peo: satrec.peo,\n        pgho: satrec.pgho,\n        pho: satrec.pho,\n        pinco: satrec.pinco,\n        plo: satrec.plo,\n        se2: satrec.se2,\n        se3: satrec.se3,\n        sgh2: satrec.sgh2,\n        sgh3: satrec.sgh3,\n        sgh4: satrec.sgh4,\n        sh2: satrec.sh2,\n        sh3: satrec.sh3,\n        si2: satrec.si2,\n        si3: satrec.si3,\n        sl2: satrec.sl2,\n        sl3: satrec.sl3,\n        sl4: satrec.sl4,\n        xgh2: satrec.xgh2,\n        xgh3: satrec.xgh3,\n        xgh4: satrec.xgh4,\n        xh2: satrec.xh2,\n        xh3: satrec.xh3,\n        xi2: satrec.xi2,\n        xi3: satrec.xi3,\n        xl2: satrec.xl2,\n        xl3: satrec.xl3,\n        xl4: satrec.xl4,\n        zmol: satrec.zmol,\n        zmos: satrec.zmos\n      };\n      var dscomResult = dscom(dscomOptions);\n      satrec.e3 = dscomResult.e3;\n      satrec.ee2 = dscomResult.ee2;\n      satrec.peo = dscomResult.peo;\n      satrec.pgho = dscomResult.pgho;\n      satrec.pho = dscomResult.pho;\n      satrec.pinco = dscomResult.pinco;\n      satrec.plo = dscomResult.plo;\n      satrec.se2 = dscomResult.se2;\n      satrec.se3 = dscomResult.se3;\n      satrec.sgh2 = dscomResult.sgh2;\n      satrec.sgh3 = dscomResult.sgh3;\n      satrec.sgh4 = dscomResult.sgh4;\n      satrec.sh2 = dscomResult.sh2;\n      satrec.sh3 = dscomResult.sh3;\n      satrec.si2 = dscomResult.si2;\n      satrec.si3 = dscomResult.si3;\n      satrec.sl2 = dscomResult.sl2;\n      satrec.sl3 = dscomResult.sl3;\n      satrec.sl4 = dscomResult.sl4;\n      sinim = dscomResult.sinim;\n      cosim = dscomResult.cosim;\n      em = dscomResult.em;\n      emsq = dscomResult.emsq;\n      s1 = dscomResult.s1;\n      s2 = dscomResult.s2;\n      s3 = dscomResult.s3;\n      s4 = dscomResult.s4;\n      s5 = dscomResult.s5;\n      ss1 = dscomResult.ss1;\n      ss2 = dscomResult.ss2;\n      ss3 = dscomResult.ss3;\n      ss4 = dscomResult.ss4;\n      ss5 = dscomResult.ss5;\n      sz1 = dscomResult.sz1;\n      sz3 = dscomResult.sz3;\n      sz11 = dscomResult.sz11;\n      sz13 = dscomResult.sz13;\n      sz21 = dscomResult.sz21;\n      sz23 = dscomResult.sz23;\n      sz31 = dscomResult.sz31;\n      sz33 = dscomResult.sz33;\n      satrec.xgh2 = dscomResult.xgh2;\n      satrec.xgh3 = dscomResult.xgh3;\n      satrec.xgh4 = dscomResult.xgh4;\n      satrec.xh2 = dscomResult.xh2;\n      satrec.xh3 = dscomResult.xh3;\n      satrec.xi2 = dscomResult.xi2;\n      satrec.xi3 = dscomResult.xi3;\n      satrec.xl2 = dscomResult.xl2;\n      satrec.xl3 = dscomResult.xl3;\n      satrec.xl4 = dscomResult.xl4;\n      satrec.zmol = dscomResult.zmol;\n      satrec.zmos = dscomResult.zmos;\n      nm = dscomResult.nm;\n      z1 = dscomResult.z1;\n      z3 = dscomResult.z3;\n      z11 = dscomResult.z11;\n      z13 = dscomResult.z13;\n      z21 = dscomResult.z21;\n      z23 = dscomResult.z23;\n      z31 = dscomResult.z31;\n      z33 = dscomResult.z33;\n      var dpperOptions = {\n        inclo: inclm,\n        init: satrec.init,\n        ep: satrec.ecco,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        argpp: satrec.argpo,\n        mp: satrec.mo,\n        opsmode: satrec.operationmode\n      };\n      var dpperResult = dpper(satrec, dpperOptions);\n      satrec.ecco = dpperResult.ep;\n      satrec.inclo = dpperResult.inclp;\n      satrec.nodeo = dpperResult.nodep;\n      satrec.argpo = dpperResult.argpp;\n      satrec.mo = dpperResult.mp;\n      argpm = 0.0;\n      nodem = 0.0;\n      mm = 0.0;\n      var dsinitOptions = {\n        cosim: cosim,\n        emsq: emsq,\n        argpo: satrec.argpo,\n        s1: s1,\n        s2: s2,\n        s3: s3,\n        s4: s4,\n        s5: s5,\n        sinim: sinim,\n        ss1: ss1,\n        ss2: ss2,\n        ss3: ss3,\n        ss4: ss4,\n        ss5: ss5,\n        sz1: sz1,\n        sz3: sz3,\n        sz11: sz11,\n        sz13: sz13,\n        sz21: sz21,\n        sz23: sz23,\n        sz31: sz31,\n        sz33: sz33,\n        t: satrec.t,\n        tc: tc,\n        gsto: satrec.gsto,\n        mo: satrec.mo,\n        mdot: satrec.mdot,\n        no: satrec.no,\n        nodeo: satrec.nodeo,\n        nodedot: satrec.nodedot,\n        xpidot: xpidot,\n        z1: z1,\n        z3: z3,\n        z11: z11,\n        z13: z13,\n        z21: z21,\n        z23: z23,\n        z31: z31,\n        z33: z33,\n        ecco: satrec.ecco,\n        eccsq: eccsq,\n        em: em,\n        argpm: argpm,\n        inclm: inclm,\n        mm: mm,\n        nm: nm,\n        nodem: nodem,\n        irez: satrec.irez,\n        atime: satrec.atime,\n        d2201: satrec.d2201,\n        d2211: satrec.d2211,\n        d3210: satrec.d3210,\n        d3222: satrec.d3222,\n        d4410: satrec.d4410,\n        d4422: satrec.d4422,\n        d5220: satrec.d5220,\n        d5232: satrec.d5232,\n        d5421: satrec.d5421,\n        d5433: satrec.d5433,\n        dedt: satrec.dedt,\n        didt: satrec.didt,\n        dmdt: satrec.dmdt,\n        dnodt: satrec.dnodt,\n        domdt: satrec.domdt,\n        del1: satrec.del1,\n        del2: satrec.del2,\n        del3: satrec.del3,\n        xfact: satrec.xfact,\n        xlamo: satrec.xlamo,\n        xli: satrec.xli,\n        xni: satrec.xni\n      };\n      var dsinitResult = dsinit(dsinitOptions);\n      satrec.irez = dsinitResult.irez;\n      satrec.atime = dsinitResult.atime;\n      satrec.d2201 = dsinitResult.d2201;\n      satrec.d2211 = dsinitResult.d2211;\n      satrec.d3210 = dsinitResult.d3210;\n      satrec.d3222 = dsinitResult.d3222;\n      satrec.d4410 = dsinitResult.d4410;\n      satrec.d4422 = dsinitResult.d4422;\n      satrec.d5220 = dsinitResult.d5220;\n      satrec.d5232 = dsinitResult.d5232;\n      satrec.d5421 = dsinitResult.d5421;\n      satrec.d5433 = dsinitResult.d5433;\n      satrec.dedt = dsinitResult.dedt;\n      satrec.didt = dsinitResult.didt;\n      satrec.dmdt = dsinitResult.dmdt;\n      satrec.dnodt = dsinitResult.dnodt;\n      satrec.domdt = dsinitResult.domdt;\n      satrec.del1 = dsinitResult.del1;\n      satrec.del2 = dsinitResult.del2;\n      satrec.del3 = dsinitResult.del3;\n      satrec.xfact = dsinitResult.xfact;\n      satrec.xlamo = dsinitResult.xlamo;\n      satrec.xli = dsinitResult.xli;\n      satrec.xni = dsinitResult.xni;\n    }\n\n    // ----------- set variables if not deep space -----------\n    if (satrec.isimp !== 1) {\n      cc1sq = satrec.cc1 * satrec.cc1;\n      satrec.d2 = 4.0 * ao * tsi * cc1sq;\n      temp = satrec.d2 * tsi * satrec.cc1 / 3.0;\n      satrec.d3 = (17.0 * ao + sfour) * temp;\n      satrec.d4 = 0.5 * temp * ao * tsi * (221.0 * ao + 31.0 * sfour) * satrec.cc1;\n      satrec.t3cof = satrec.d2 + 2.0 * cc1sq;\n      satrec.t4cof = 0.25 * (3.0 * satrec.d3 + satrec.cc1 * (12.0 * satrec.d2 + 10.0 * cc1sq));\n      satrec.t5cof = 0.2 * (3.0 * satrec.d4 + 12.0 * satrec.cc1 * satrec.d3 + 6.0 * satrec.d2 * satrec.d2 + 15.0 * cc1sq * (2.0 * satrec.d2 + cc1sq));\n    }\n\n    /* finally propogate to zero epoch to initialize all others. */\n    // sgp4fix take out check to let satellites process until they are actually below earth surface\n    // if(satrec.error == 0)\n  }\n\n  sgp4(satrec, 0);\n  satrec.init = 'n';\n\n  /* eslint-enable no-param-reassign */\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function twoline2rv\n *\n *  this function converts the two line element set character string data to\n *    variables and initializes the sgp4 variables. several intermediate varaibles\n *    and quantities are determined. note that the result is a structure so multiple\n *    satellites can be processed simultaneously without having to reinitialize. the\n *    verification mode is an important option that permits quick checks of any\n *    changes to the underlying technical theory. this option works using a\n *    modified tle file in which the start, stop, and delta time values are\n *    included at the end of the second line of data. this only works with the\n *    verification mode. the catalog mode simply propagates from -1440 to 1440 min\n *    from epoch and is useful when performing entire catalog runs.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs        :\n *    longstr1    - first line of the tle\n *    longstr2    - second line of the tle\n *    typerun     - type of run                    verification 'v', catalog 'c',\n *                                                 manual 'm'\n *    typeinput   - type of manual input           mfe 'm', epoch 'e', dayofyr 'd'\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    whichconst  - which set of constants to use  72, 84\n *\n *  outputs       :\n *    satrec      - structure containing all the sgp4 satellite information\n *\n *  coupling      :\n *    getgravconst-\n *    days2mdhms  - conversion of days to month, day, hour, minute, second\n *    jday        - convert day month year hour minute second into julian date\n *    sgp4init    - initialize the sgp4 variables\n *\n *  references    :\n *    norad spacetrack report #3\n *    vallado, crawford, hujsak, kelso  2006\n --------------------------------------------------------------------------- */\n\n/**\n * Return a Satellite imported from two lines of TLE data.\n *\n * Provide the two TLE lines as strings `longstr1` and `longstr2`,\n * and select which standard set of gravitational constants you want\n * by providing `gravity_constants`:\n *\n * `sgp4.propagation.wgs72` - Standard WGS 72 model\n * `sgp4.propagation.wgs84` - More recent WGS 84 model\n * `sgp4.propagation.wgs72old` - Legacy support for old SGP4 behavior\n *\n * Normally, computations are made using letious recent improvements\n * to the algorithm.  If you want to turn some of these off and go\n * back into \"afspc\" mode, then set `afspc_mode` to `True`.\n */\nfunction twoline2satrec(longstr1, longstr2) {\n  var opsmode = 'i';\n  var xpdotp = 1440.0 / (2.0 * pi); // 229.1831180523293;\n  var year = 0;\n  var satrec = {};\n  satrec.error = 0;\n  satrec.satnum = longstr1.substring(2, 7);\n  satrec.epochyr = parseInt(longstr1.substring(18, 20), 10);\n  satrec.epochdays = parseFloat(longstr1.substring(20, 32));\n  satrec.ndot = parseFloat(longstr1.substring(33, 43));\n  satrec.nddot = parseFloat(\".\".concat(parseInt(longstr1.substring(44, 50), 10), \"E\").concat(longstr1.substring(50, 52)));\n  satrec.bstar = parseFloat(\"\".concat(longstr1.substring(53, 54), \".\").concat(parseInt(longstr1.substring(54, 59), 10), \"E\").concat(longstr1.substring(59, 61)));\n\n  // satrec.satnum = longstr2.substring(2, 7);\n  satrec.inclo = parseFloat(longstr2.substring(8, 16));\n  satrec.nodeo = parseFloat(longstr2.substring(17, 25));\n  satrec.ecco = parseFloat(\".\".concat(longstr2.substring(26, 33)));\n  satrec.argpo = parseFloat(longstr2.substring(34, 42));\n  satrec.mo = parseFloat(longstr2.substring(43, 51));\n  satrec.no = parseFloat(longstr2.substring(52, 63));\n\n  // ---- find no, ndot, nddot ----\n  satrec.no /= xpdotp; //   rad/min\n  // satrec.nddot= satrec.nddot * Math.pow(10.0, nexp);\n  // satrec.bstar= satrec.bstar * Math.pow(10.0, ibexp);\n\n  // ---- convert to sgp4 units ----\n  // satrec.ndot /= (xpdotp * 1440.0); // ? * minperday\n  // satrec.nddot /= (xpdotp * 1440.0 * 1440);\n\n  // ---- find standard orbital elements ----\n  satrec.inclo *= deg2rad;\n  satrec.nodeo *= deg2rad;\n  satrec.argpo *= deg2rad;\n  satrec.mo *= deg2rad;\n\n  // ----------------------------------------------------------------\n  // find sgp4epoch time of element set\n  // remember that sgp4 uses units of days from 0 jan 1950 (sgp4epoch)\n  // and minutes from the epoch (time)\n  // ----------------------------------------------------------------\n\n  // ---------------- temp fix for years from 1957-2056 -------------------\n  // --------- correct fix will occur when year is 4-digit in tle ---------\n\n  if (satrec.epochyr < 57) {\n    year = satrec.epochyr + 2000;\n  } else {\n    year = satrec.epochyr + 1900;\n  }\n  var mdhmsResult = days2mdhms(year, satrec.epochdays);\n  var mon = mdhmsResult.mon,\n    day = mdhmsResult.day,\n    hr = mdhmsResult.hr,\n    minute = mdhmsResult.minute,\n    sec = mdhmsResult.sec;\n  satrec.jdsatepoch = jday(year, mon, day, hr, minute, sec);\n\n  //  ---------------- initialize the orbit at sgp4epoch -------------------\n  sgp4init(satrec, {\n    opsmode: opsmode,\n    satn: satrec.satnum,\n    epoch: satrec.jdsatepoch - 2433281.5,\n    xbstar: satrec.bstar,\n    xecco: satrec.ecco,\n    xargpo: satrec.argpo,\n    xinclo: satrec.inclo,\n    xmo: satrec.mo,\n    xno: satrec.no,\n    xnodeo: satrec.nodeo\n  });\n  return satrec;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction propagate() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  // Return a position and velocity vector for a given date and time.\n  var satrec = args[0];\n  var date = Array.prototype.slice.call(args, 1);\n  var j = jday.apply(void 0, _toConsumableArray(date));\n  var m = (j - satrec.jdsatepoch) * minutesPerDay;\n  return sgp4(satrec, m);\n}\n\nfunction dopplerFactor(location, position, velocity) {\n  var mfactor = 7.292115E-5;\n  var c = 299792.458; // Speed of light in km/s\n\n  var range = {\n    x: position.x - location.x,\n    y: position.y - location.y,\n    z: position.z - location.z\n  };\n  range.w = Math.sqrt(Math.pow(range.x, 2) + Math.pow(range.y, 2) + Math.pow(range.z, 2));\n  var rangeVel = {\n    x: velocity.x + mfactor * location.y,\n    y: velocity.y - mfactor * location.x,\n    z: velocity.z\n  };\n  function sign(value) {\n    return value >= 0 ? 1 : -1;\n  }\n  var rangeRate = (range.x * rangeVel.x + range.y * rangeVel.y + range.z * rangeVel.z) / range.w;\n  return 1 + rangeRate / c * sign(rangeRate);\n}\n\nfunction radiansToDegrees(radians) {\n  return radians * rad2deg;\n}\nfunction degreesToRadians(degrees) {\n  return degrees * deg2rad;\n}\nfunction degreesLat(radians) {\n  if (radians < -pi / 2 || radians > pi / 2) {\n    throw new RangeError('Latitude radians must be in range [-pi/2; pi/2].');\n  }\n  return radiansToDegrees(radians);\n}\nfunction degreesLong(radians) {\n  if (radians < -pi || radians > pi) {\n    throw new RangeError('Longitude radians must be in range [-pi; pi].');\n  }\n  return radiansToDegrees(radians);\n}\nfunction radiansLat(degrees) {\n  if (degrees < -90 || degrees > 90) {\n    throw new RangeError('Latitude degrees must be in range [-90; 90].');\n  }\n  return degreesToRadians(degrees);\n}\nfunction radiansLong(degrees) {\n  if (degrees < -180 || degrees > 180) {\n    throw new RangeError('Longitude degrees must be in range [-180; 180].');\n  }\n  return degreesToRadians(degrees);\n}\nfunction geodeticToEcf(geodetic) {\n  var longitude = geodetic.longitude,\n    latitude = geodetic.latitude,\n    height = geodetic.height;\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var normal = a / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n  var x = (normal + height) * Math.cos(latitude) * Math.cos(longitude);\n  var y = (normal + height) * Math.cos(latitude) * Math.sin(longitude);\n  var z = (normal * (1 - e2) + height) * Math.sin(latitude);\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction eciToGeodetic(eci, gmst) {\n  // http://www.celestrak.com/columns/v02n03/\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var R = Math.sqrt(eci.x * eci.x + eci.y * eci.y);\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var longitude = Math.atan2(eci.y, eci.x) - gmst;\n  while (longitude < -pi) {\n    longitude += twoPi;\n  }\n  while (longitude > pi) {\n    longitude -= twoPi;\n  }\n  var kmax = 20;\n  var k = 0;\n  var latitude = Math.atan2(eci.z, Math.sqrt(eci.x * eci.x + eci.y * eci.y));\n  var C;\n  while (k < kmax) {\n    C = 1 / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n    latitude = Math.atan2(eci.z + a * C * e2 * Math.sin(latitude), R);\n    k += 1;\n  }\n  var height = R / Math.cos(latitude) - a * C;\n  return {\n    longitude: longitude,\n    latitude: latitude,\n    height: height\n  };\n}\nfunction ecfToEci(ecf, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  var X = ecf.x * Math.cos(gmst) - ecf.y * Math.sin(gmst);\n  var Y = ecf.x * Math.sin(gmst) + ecf.y * Math.cos(gmst);\n  var Z = ecf.z;\n  return {\n    x: X,\n    y: Y,\n    z: Z\n  };\n}\nfunction eciToEcf(eci, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  //\n  // Inverse:\n  // [X]     [C  S  0][X]\n  // [Y]  =  [-S C  0][Y]\n  // [Z]ecf  [0  0  1][Z]eci\n\n  var x = eci.x * Math.cos(gmst) + eci.y * Math.sin(gmst);\n  var y = eci.x * -Math.sin(gmst) + eci.y * Math.cos(gmst);\n  var z = eci.z;\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction topocentric(observerGeodetic, satelliteEcf) {\n  // http://www.celestrak.com/columns/v02n02/\n  // TS Kelso's method, except I'm using ECF frame\n  // and he uses ECI.\n\n  var longitude = observerGeodetic.longitude,\n    latitude = observerGeodetic.latitude;\n  var observerEcf = geodeticToEcf(observerGeodetic);\n  var rx = satelliteEcf.x - observerEcf.x;\n  var ry = satelliteEcf.y - observerEcf.y;\n  var rz = satelliteEcf.z - observerEcf.z;\n  var topS = Math.sin(latitude) * Math.cos(longitude) * rx + Math.sin(latitude) * Math.sin(longitude) * ry - Math.cos(latitude) * rz;\n  var topE = -Math.sin(longitude) * rx + Math.cos(longitude) * ry;\n  var topZ = Math.cos(latitude) * Math.cos(longitude) * rx + Math.cos(latitude) * Math.sin(longitude) * ry + Math.sin(latitude) * rz;\n  return {\n    topS: topS,\n    topE: topE,\n    topZ: topZ\n  };\n}\n\n/**\n * @param {Object} tc\n * @param {Number} tc.topS Positive horizontal vector S due south.\n * @param {Number} tc.topE Positive horizontal vector E due east.\n * @param {Number} tc.topZ Vector Z normal to the surface of the earth (up).\n * @returns {Object}\n */\nfunction topocentricToLookAngles(tc) {\n  var topS = tc.topS,\n    topE = tc.topE,\n    topZ = tc.topZ;\n  var rangeSat = Math.sqrt(topS * topS + topE * topE + topZ * topZ);\n  var El = Math.asin(topZ / rangeSat);\n  var Az = Math.atan2(-topE, topS) + pi;\n  return {\n    azimuth: Az,\n    elevation: El,\n    rangeSat: rangeSat // Range in km\n  };\n}\n\nfunction ecfToLookAngles(observerGeodetic, satelliteEcf) {\n  var topocentricCoords = topocentric(observerGeodetic, satelliteEcf);\n  return topocentricToLookAngles(topocentricCoords);\n}\n\nexport { constants, degreesLat, degreesLong, degreesToRadians, dopplerFactor, ecfToEci, ecfToLookAngles, eciToEcf, eciToGeodetic, geodeticToEcf, gstime, invjday, jday, propagate, radiansLat, radiansLong, radiansToDegrees, sgp4, twoline2satrec };\n"],"names":["pi","Math","PI","twoPi","deg2rad","rad2deg","minutesPerDay","mu","earthRadius","xke","sqrt","vkmpersec","tumin","j2","j3","j4","j3oj2","x2o3","constants","Object","freeze","__proto__","days2mdhms","year","days","lmonth","dayofyr","floor","i","inttemp","mon","day","temp","hr","minute","sec","jdayInternal","msec","arguments","length","undefined","jday","Date","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","invjday","jd","asArray","tu","leapyrs","mdhms","UTC","dpper","satrec","options","alfdp","betdp","cosip","sinip","cosop","sinop","f2","f3","pe","pgh","ph","pinc","pl","sinzf","xls","xnoh","zf","zm","e3","ee2","peo","pgho","pho","pinco","plo","se2","se3","sgh2","sgh3","sgh4","sh2","sh3","si2","si3","sl2","sl3","sl4","t","xgh2","xgh3","xgh4","xh2","xh3","xi2","xi3","xl2","xl3","xl4","zmol","zmos","init","opsmode","ep","inclp","nodep","argpp","mp","sin","ses","cos","sis","sls","sghs","shs","atan2","abs","gstimeInternal","jdut1","tut1","gstime","apply","sgp4","tsince","coseo1","sineo1","cosisq","delomg","eo1","argpm","su","t3","t4","tc","tem5","tempa","tempe","templ","inclm","mm","nm","nodem","xincp","xlm","error","xmdf","mo","mdot","argpdf","argpo","argpdot","nodedf","nodeo","nodedot","t2","nodecf","cc1","bstar","cc4","t2cof","isimp","omgcof","delmtemp","eta","xmcof","delmo","d2","d3","d4","cc5","sinmao","t3cof","t4cof","t5cof","no","em","ecco","inclo","method","dspaceResult","delt","x2li","x2omi","xl","xldot","xnddt","xndt","xomi","irez","d2201","d2211","d3210","d3222","d4410","d4422","d5220","d5232","d5421","d5433","dedt","del1","del2","del3","didt","dmdt","dnodt","domdt","gsto","xfact","xlamo","atime","xli","xni","fasx2","fasx4","fasx6","g22","g32","g44","g52","g54","step2","dndt","ft","theta","iretn","dspace","am","pow","dpperResult","operationmode","aycof","xlcof","axnl","aynl","u","ktr","ecose","esine","el2","rl","rdotl","rvdotl","betal","sinu","cosu","sin2u","cos2u","temp1","temp2","con41","x1mth2","x7thm1","mrt","position","velocity","xnode","xinc","mvt","rvdot","sinsu","cossu","snod","cnod","sini","cosi","xmx","xmy","ux","uy","uz","x","y","z","sgp4init","cosim","sinim","cc1sq","cc2","cc3","coef","coef1","cosio4","emsq","eeta","etasq","perige","pinvsq","psisq","qzms24","s1","s2","s3","s4","s5","sfour","ss1","ss2","ss3","ss4","ss5","sz1","sz3","sz11","sz13","sz21","sz23","sz31","sz33","temp3","tsi","xpidot","xhdot1","z1","z3","z11","z13","z21","z23","z31","z33","satn","epoch","xbstar","xecco","xargpo","xinclo","xmo","xno","xnodeo","ss","qzms2ttemp","qzms2t","initlResult","eccsq","omeosq","rteosq","cosio","cosio2","ak","d1","delPrime","adel","ao","sinio","po","con42","ainv","posq","rp","ts70","ds70","c1","initl","a","alta","altp","qzms24temp","delmotemp","dscomResult","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","cc","x1","x2","x3","x4","x5","x6","x7","x8","zcosg","zsing","zcosh","zsinh","zcosi","zsini","ss6","ss7","sz2","sz12","sz22","sz32","s6","s7","z2","z12","z22","z32","zes","zel","np","snodm","cnodm","sinomm","cosomm","betasq","rtemsq","xnodce","stem","ctem","zcosil","zsinil","zsinhl","zcoshl","gam","zx","zy","zcosgl","zsingl","xnoi","lsflg","dscom","dsinitResult","f220","f330","g211","g310","g322","g410","g422","g520","g521","g532","g533","sini2","aonv","eoc","rptim","znl","zns","shll","emo","emsqo","dsinit","twoline2satrec","longstr1","longstr2","xpdotp","satnum","substring","epochyr","parseInt","epochdays","parseFloat","ndot","nddot","concat","mdhmsResult","jdsatepoch","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","propagate","_len","args","_key","dopplerFactor","location","mfactor","range","w","rangeVel","rangeRate","radiansToDegrees","radians","degreesToRadians","degrees","degreesLat","RangeError","degreesLong","radiansLat","radiansLong","geodeticToEcf","geodetic","longitude","latitude","height","f","e2","normal","eciToGeodetic","eci","gmst","R","C","k","ecfToEci","ecf","eciToEcf","ecfToLookAngles","observerGeodetic","satelliteEcf","topocentricCoords","observerEcf","rx","ry","rz","topS","topE","topZ","topocentric","rangeSat","El","asin","azimuth","elevation","topocentricToLookAngles"],"sourceRoot":""}