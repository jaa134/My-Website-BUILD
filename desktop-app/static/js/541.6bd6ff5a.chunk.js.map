{"version":3,"file":"static/js/541.6bd6ff5a.chunk.js","mappings":"uMA6BA,GA7BgB,QAKd,WAAYA,EAAsCC,GAAgB,IAAD,4BAJzDD,gBAAU,OAEVC,WAAK,OAONC,KAAO,SAACC,EAAmCC,EAAeC,EAAgBC,GAG/E,GAFAH,EAAQI,YACRJ,EAAQK,OAAO,EAAGH,KACd,EAAKL,WAAWS,OAAS,GAA7B,CAGA,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAOM,GAAK,EAAG,CACjC,IAAMC,EAAQC,KAAKC,IAAIH,EAAI,EAAKV,WAAW,GAAKM,GAC1CQ,EAAQF,KAAKC,IAAIH,EAAI,EAAKV,WAAW,GAAKM,GAC1CS,EAAQH,KAAKC,IAAIH,EAAI,EAAKV,WAAW,GAAKM,GAChDH,EAAQa,OAAW,IAAJN,EAASL,EAAS,IAAMM,EAAQG,EAAQC,EAAQ,IACjE,CACAZ,EAAQa,OAAOZ,EAAOC,GACtBF,EAAQc,UAAY,EAAKhB,MACzBE,EAAQe,OACRf,EAAQgB,WAVR,CAWF,EApBEC,KAAKpB,WAAaA,EAClBoB,KAAKnB,MAAQA,CACf,I,SCDIoB,GAAMC,EAAAA,EAAAA,GAAY,cAwCxB,EAtCuB,WACrB,IAAMC,GAAYC,EAAAA,EAAAA,QAA0B,MAExClB,EAAY,KACVmB,EAAQ,CACZ,IAAIC,EAAW,CAAC,MAAQ,KAAO,MAAQ,sBACvC,IAAIA,EAAW,CAAC,MAAQ,KAAO,MAAQ,uBAGnCC,EAAc,SAAdA,EAAeC,GACnBA,EAAcC,UAAU,EAAG,EAAGD,EAAcE,OAAO1B,MAAOwB,EAAcE,OAAOzB,QAC/EoB,EAAMM,SAAQ,SAACC,GACbA,EAAK9B,KAAK0B,EAAeA,EAAcE,OAAO1B,MAAOwB,EAAcE,OAAOzB,OAAQC,EACpF,IACAA,GAAa,KACb2B,uBAAsB,WACpBN,EAAYC,EACd,GACF,EASA,OAPAM,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRN,EAAiC,QAApB,EAAGL,EAAUY,eAAO,aAAjB,EAAmBC,WAAW,MAChDR,GACFD,EAAYC,EAEhB,GAAG,CAACL,KAGF,gBAAKc,UAAWhB,IAAM,UACpB,mBACEiB,IAAKf,EACLnB,MAAO,KACPC,OAAQ,OAIhB,ECrCMgB,GAAMC,EAAAA,EAAAA,GAAY,YAmBxB,EAjBiB,WAAH,OACZ,iBAAKe,UAAWhB,IAAM,WACpB,gBAAKgB,UAAWhB,EAAI,YACpB,gBAAKgB,UAAWhB,EAAI,SAAS,UAC3B,SAAC,EAAU,OAEb,gBAAKgB,UAAWhB,EAAI,cACpB,gBAAKgB,UAAWhB,EAAI,QAAS,YAAY,UACvC,SAAC,EAAU,OAEb,gBAAKgB,UAAWhB,EAAI,iBACpB,gBAAKgB,UAAWhB,EAAI,eACpB,gBAAKgB,UAAWhB,EAAI,cACpB,gBAAKgB,UAAWhB,EAAI,aAChB,C","sources":["components/layout/waveCanvas/WaveEntity.ts","components/layout/waveCanvas/WaveCanvas.tsx","components/pages/homePage/HomePage.tsx"],"sourcesContent":["class WaveEntity {\n  private waveLength: [number, number, number];\n\n  private color: string;\n\n  constructor(waveLength: [number, number, number], color: string) {\n    this.waveLength = waveLength;\n    this.color = color;\n  }\n\n  public draw = (context: CanvasRenderingContext2D, width: number, height: number, frequency: number): void => {\n    context.beginPath();\n    context.moveTo(0, height);\n    if (this.waveLength.length < 3) {\n      return;\n    }\n    for (let i = 0; i < width; i += 1) {\n      const wave1 = Math.sin(i * this.waveLength[0] - frequency);\n      const wave2 = Math.sin(i * this.waveLength[1] - frequency);\n      const wave3 = Math.sin(i * this.waveLength[2] - frequency);\n      context.lineTo(i * 2.5, height - 400 + wave1 * wave2 * wave3 * 200);\n    }\n    context.lineTo(width, height);\n    context.fillStyle = this.color;\n    context.fill();\n    context.closePath();\n  };\n}\n\nexport default WaveEntity;\n","import 'src/components/layout/waveCanvas/WaveCanvas.scss';\n\nimport { useRef, FC, useEffect } from 'react';\n\nimport WaveEntity from 'src/components/layout/waveCanvas/WaveEntity';\nimport defineBlock from 'src/utils/defineBlock';\n\nconst bem = defineBlock('WaveCanvas');\n\nconst WaveCanvas: FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  let frequency = 0.013;\n  const waves = [\n    new WaveEntity([0.0211, 0.028, 0.015], 'rgba(47,2,126,0.6)'),\n    new WaveEntity([0.0122, 0.018, 0.005], 'rgba(47,2,126,0.6)'),\n  ];\n\n  const renderWaves = (canvasContext: CanvasRenderingContext2D) => {\n    canvasContext.clearRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n    waves.forEach((wave) => {\n      wave.draw(canvasContext, canvasContext.canvas.width, canvasContext.canvas.height, frequency);\n    });\n    frequency += 0.005;\n    requestAnimationFrame(() => {\n      renderWaves(canvasContext);\n    });\n  };\n\n  useEffect(() => {\n    const canvasContext = canvasRef.current?.getContext('2d');\n    if (canvasContext) {\n      renderWaves(canvasContext);\n    }\n  }, [canvasRef]);\n\n  return (\n    <div className={bem()}>\n      <canvas\n        ref={canvasRef}\n        width={1500}\n        height={600}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default WaveCanvas;\n","import 'src/components/pages/homePage/HomePage.scss';\n\nimport React from 'react';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nimport WaveCanvas from 'src/components/layout/waveCanvas/WaveCanvas';\n\nconst bem = defineBlock('HomePage');\n\nconst HomePage = () => (\n  <div className={bem()}>\n    <div className={bem('about')}></div>\n    <div className={bem('waves')}>\n      <WaveCanvas />\n    </div>\n    <div className={bem('bubbles')}></div>\n    <div className={bem('waves', 'inverted')}>\n      <WaveCanvas />\n    </div>\n    <div className={bem('experience')}></div>\n    <div className={bem('projects')}></div>\n    <div className={bem('contact')}></div>\n    <div className={bem('globe')}></div>\n  </div>\n);\n\nexport default HomePage;\n"],"names":["waveLength","color","draw","context","width","height","frequency","beginPath","moveTo","length","i","wave1","Math","sin","wave2","wave3","lineTo","fillStyle","fill","closePath","this","bem","defineBlock","canvasRef","useRef","waves","WaveEntity","renderWaves","canvasContext","clearRect","canvas","forEach","wave","requestAnimationFrame","useEffect","current","getContext","className","ref"],"sourceRoot":""}