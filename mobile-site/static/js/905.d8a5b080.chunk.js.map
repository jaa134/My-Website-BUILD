{"version":3,"file":"static/js/905.d8a5b080.chunk.js","mappings":"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","sources":["components/common/button/Button.tsx","components/common/pageHeader/PageHeader.tsx","components/icons/general/Star.tsx","components/layout/lineSplit/LineSplit.tsx","utils/notificatons.ts","utils/textUtils.ts","components/icons/general/Email.tsx","components/icons/general/Location.tsx","components/icons/general/Phone.tsx","components/pages/contactPage/optionsSection/OptionsSection.tsx","components/pages/contactPage/formSection/FormSection.tsx","components/pages/contactPage/socialsSection/SocialsSection.tsx","components/pages/contactPage/globeSection/GlobeScene.ts","components/pages/contactPage/globeSection/GlobeSection.tsx","components/pages/contactPage/ContactPage.tsx"],"sourcesContent":["import 'src/components/common/button/Button.scss';\n\nimport PropTypes from 'prop-types';\nimport React, { FunctionComponent, MouseEventHandler, PropsWithChildren, ReactElement } from 'react';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nconst bem = defineBlock('Button');\n\ntype Props = PropsWithChildren<{\n  size?: 'small' | 'medium' | 'large';\n  type?: 'filled' | 'outlined' | 'text';\n  color?: 'purple' | 'white';\n  disabled?: boolean;\n  icon?: ReactElement;\n  label?: string;\n  onClick?: MouseEventHandler<HTMLElement>;\n}>;\n\nconst Button: FunctionComponent<Props> = ({\n  size = 'medium',\n  type = 'filled',\n  color = 'purple',\n  disabled = false,\n  icon = null,\n  label = null,\n  children = null,\n  onClick = null,\n}) => (\n  <button\n    type=\"button\"\n    className={bem('', size, type, color, { disabled })}\n    disabled={disabled}\n    {...(onClick && !disabled && { onClick })}\n  >\n    {icon && <div className={bem('icon')}>{icon}</div>}\n    <div className={bem('text')}>{children ?? label ?? ''}</div>\n  </button>\n);\n\nButton.propTypes = {\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  type: PropTypes.oneOf(['filled', 'outlined', 'text']),\n  color: PropTypes.oneOf(['purple', 'white']),\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  label: PropTypes.string,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import 'src/components/common/pageHeader/PageHeader.scss';\n\nimport PropTypes from 'prop-types';\nimport React, { FunctionComponent, useState } from 'react';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nimport Star from 'src/components/icons/general/Star';\n\nconst bem = defineBlock('PageHeader');\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  description: string;\n}\n\nconst PageHeader: FunctionComponent<Props> = ({ title, subtitle, description }) => {\n  const [position] = useState(Math.ceil(Math.random() * 2));\n\n  return (\n    <div className={bem('', `pos-${position}`)}>\n      <div className={bem('container')}>\n        <div className={bem('title')}>\n          <Star />\n          <Star />\n          <div>{title}</div>\n        </div>\n        <div className={bem('subtitle')}>{subtitle}</div>\n        <div className={bem('description')}>{description}</div>\n      </div>\n    </div>\n  );\n};\n\nPageHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default PageHeader;\n","import React from 'react';\n\nconst Star = () => (\n  <svg\n    viewBox=\"0 0 50 50\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M19.3729 4.20704C21.3058 -1.01667 28.6942 -1.01667 30.6271 4.20704L33.7658 12.6893C34.3735 14.3316 35.6684 15.6265 37.3107 16.2342L45.793 19.3729C51.0167 21.3058 51.0167 28.6942 45.793 30.6271L37.3107 33.7658C35.6684 34.3735 34.3735 35.6684 33.7658 37.3107L30.6271 45.793C28.6942 51.0167 21.3058 51.0167 19.3729 45.793L16.2342 37.3107C15.6265 35.6684 14.3316 34.3735 12.6893 33.7658L4.20704 30.6271C-1.01667 28.6942 -1.01667 21.3058 4.20704 19.3729L12.6893 16.2342C14.3316 15.6265 15.6265 14.3316 16.2342 12.6893L19.3729 4.20704Z\" />\n  </svg>\n);\n\nexport default Star;\n","import 'src/components/layout/lineSplit/LineSplit.scss';\n\nimport React from 'react';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nconst bem = defineBlock('LineSplit');\n\nconst LineSplit = () => (\n  <div className={bem()}>\n    <svg\n      viewBox=\"0 -15 1920 100\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M-15 46.0848C-15 46.0848 134.092 28.6835 230 29.0848C320.454 29.4632 370.546 45.6106 461 46.0848C614.635 46.8901 698.801 -9.01449 852 2.58477C918.422 7.61384 954.389 20.9262 1020.5 29.0848C1100.23 38.9237 1145.17 46.6256 1225.5 46.0848C1299.8 45.5845 1340.79 25.3823 1415 29.0848C1493.56 33.0042 1534.17 61.472 1612.5 68.5848C1732.22 79.4554 1919.5 46.0848 1919.5 46.0848\" />\n    </svg>\n  </div>\n);\n\nexport default LineSplit;\n","import 'src/scss/notification.scss';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nconst CONTAINER_ID = 'notifyContainer';\n\nconst bem = defineBlock('Notification');\n\nconst createContainer = () => {\n  let element = document.getElementById(CONTAINER_ID);\n\n  if (element) {\n    return element;\n  }\n\n  element = document.createElement('div');\n  element.setAttribute('id', CONTAINER_ID);\n  element.setAttribute('class', bem('container'));\n\n  document.body.appendChild(element);\n\n  return element;\n};\n\nconst notify = (message: string, timeout = 5000, animationDuration = 1000) => {\n  const container = createContainer();\n\n  const notificationEl = document.createElement('div');\n  notificationEl.setAttribute('class', bem());\n  notificationEl.style.setProperty('transition-duration', `${animationDuration}ms`);\n\n  const messageEl = document.createElement('div');\n  messageEl.setAttribute('class', bem('message'));\n  messageEl.innerText = message;\n\n  const closeEl = document.createElement('div');\n  closeEl.setAttribute('class', bem('close'));\n  closeEl.innerHTML =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path d=\"M310.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L160 210.7 54.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L114.7 256 9.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 301.3 265.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L205.3 256 310.6 150.6z\"/></svg>';\n\n  notificationEl.appendChild(messageEl);\n  notificationEl.appendChild(closeEl);\n  container.appendChild(notificationEl);\n\n  const close = () => {\n    notificationEl.setAttribute('class', bem('', 'closed'));\n    setTimeout(() => {\n      container.removeChild(notificationEl);\n    }, animationDuration);\n  };\n\n  const autoCloseTimeout = setTimeout(() => {\n    close();\n  }, timeout);\n\n  closeEl.addEventListener('click', () => {\n    clearTimeout(autoCloseTimeout);\n    close();\n  });\n};\n\nexport default notify;\n","const copyText = async (text: string) => {\n  try {\n    await navigator.clipboard.writeText(text);\n    return true;\n  } catch (err) {\n    console.error('Failed to copy text.');\n  }\n  return false;\n};\n\nexport default copyText;\n","import React from 'react';\n\nconst Email = () => (\n  <svg\n    viewBox=\"0 0 38 35\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M30.0833 0H7.91667C5.81781 0.00252614 3.80563 0.841403 2.32151 2.33262C0.837396 3.82384 0.00251411 5.84564 0 7.95455L0 27.0455C0.00251411 29.1544 0.837396 31.1762 2.32151 32.6674C3.80563 34.1586 5.81781 34.9975 7.91667 35H30.0833C32.1822 34.9975 34.1944 34.1586 35.6785 32.6674C37.1626 31.1762 37.9975 29.1544 38 27.0455V7.95455C37.9975 5.84564 37.1626 3.82384 35.6785 2.33262C34.1944 0.841403 32.1822 0.00252614 30.0833 0ZM7.91667 3.18182H30.0833C31.0314 3.18369 31.9572 3.47059 32.7417 4.0056C33.5261 4.5406 34.1333 5.29923 34.485 6.18386L22.3598 18.3686C21.4675 19.2616 20.2594 19.763 19 19.763C17.7406 19.763 16.5325 19.2616 15.6402 18.3686L3.515 6.18386C3.86674 5.29923 4.47389 4.5406 5.25833 4.0056C6.04276 3.47059 6.96859 3.18369 7.91667 3.18182ZM30.0833 31.8182H7.91667C6.65689 31.8182 5.44871 31.3153 4.55791 30.4203C3.66711 29.5252 3.16667 28.3113 3.16667 27.0455V10.3409L13.4013 20.6182C14.8875 22.1077 16.9009 22.9442 19 22.9442C21.0991 22.9442 23.1125 22.1077 24.5987 20.6182L34.8333 10.3409V27.0455C34.8333 28.3113 34.3329 29.5252 33.4421 30.4203C32.5513 31.3153 31.3431 31.8182 30.0833 31.8182Z\"\n      fill=\"#640DFB\"\n    />\n  </svg>\n);\n\nexport default Email;\n","import React from 'react';\n\nconst Location = () => (\n  <svg\n    viewBox=\"0 0 42 42\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_29_326)\">\n      <path d=\"M21 10.5C19.6155 10.5 18.2622 10.9105 17.111 11.6797C15.9599 12.4489 15.0627 13.5421 14.5328 14.8212C14.003 16.1003 13.8644 17.5078 14.1345 18.8656C14.4046 20.2235 15.0713 21.4708 16.0503 22.4497C17.0292 23.4287 18.2765 24.0954 19.6344 24.3655C20.9922 24.6356 22.3997 24.497 23.6788 23.9672C24.9579 23.4373 26.0511 22.5401 26.8203 21.389C27.5895 20.2378 28 18.8845 28 17.5C28 15.6435 27.2625 13.863 25.9498 12.5503C24.637 11.2375 22.8565 10.5 21 10.5ZM21 21C20.3078 21 19.6311 20.7947 19.0555 20.4101C18.4799 20.0256 18.0313 19.4789 17.7664 18.8394C17.5015 18.1999 17.4322 17.4961 17.5673 16.8172C17.7023 16.1383 18.0356 15.5146 18.5251 15.0251C19.0146 14.5356 19.6383 14.2023 20.3172 14.0673C20.9961 13.9322 21.6999 14.0015 22.3394 14.2664C22.9789 14.5313 23.5256 14.9799 23.9101 15.5555C24.2947 16.1311 24.5 16.8078 24.5 17.5C24.5 18.4283 24.1313 19.3185 23.4749 19.9749C22.8185 20.6313 21.9283 21 21 21Z\" />\n      <path d=\"M21.0001 42.0001C19.5265 42.0076 18.0725 41.662 16.7599 40.9922C15.4473 40.3223 14.3144 39.3478 13.4558 38.1501C6.78656 28.9503 3.40381 22.0343 3.40381 17.5928C3.40381 12.926 5.25769 8.45034 8.55763 5.1504C11.8576 1.85047 16.3332 -0.00341797 21.0001 -0.00341797C25.6669 -0.00341797 30.1425 1.85047 33.4425 5.1504C36.7424 8.45034 38.5963 12.926 38.5963 17.5928C38.5963 22.0343 35.2136 28.9503 28.5443 38.1501C27.6858 39.3478 26.5528 40.3223 25.2402 40.9922C23.9276 41.662 22.4737 42.0076 21.0001 42.0001ZM21.0001 3.81683C17.3468 3.821 13.8443 5.2741 11.2611 7.85736C8.67783 10.4406 7.22473 13.9431 7.22056 17.5963C7.22056 21.1138 10.5333 27.6186 16.5463 35.9118C17.0568 36.6149 17.7265 37.1872 18.5006 37.5818C19.2747 37.9764 20.1312 38.1821 21.0001 38.1821C21.8689 38.1821 22.7255 37.9764 23.4996 37.5818C24.2737 37.1872 24.9433 36.6149 25.4538 35.9118C31.4668 27.6186 34.7796 21.1138 34.7796 17.5963C34.7754 13.9431 33.3223 10.4406 30.739 7.85736C28.1558 5.2741 24.6533 3.821 21.0001 3.81683Z\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_29_326\">\n        <rect\n          width=\"42\"\n          height=\"42\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default Location;\n","import React from 'react';\n\nconst Phone = () => (\n  <svg\n    viewBox=\"0 0 32 46\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9.4375 45.35H22.5625C27.4002 45.35 31.35 41.4992 31.35 36.75V9.25C31.35 4.50083 27.4002 0.65 22.5625 0.65H9.4375C4.59978 0.65 0.65 4.50083 0.65 9.25V36.75C0.65 41.4992 4.59978 45.35 9.4375 45.35ZM3.225 9.25C3.225 5.91234 6.00459 3.18333 9.4375 3.18333H22.5625C25.9954 3.18333 28.775 5.91234 28.775 9.25V36.75C28.775 40.0877 25.9954 42.8167 22.5625 42.8167H9.4375C6.00459 42.8167 3.225 40.0877 3.225 36.75V9.25ZM20.1 38.5833C20.1 37.8767 19.5158 37.3167 18.8125 37.3167H13.1875C12.4842 37.3167 11.9 37.8767 11.9 38.5833C11.9 39.29 12.4842 39.85 13.1875 39.85H18.8125C19.5158 39.85 20.1 39.29 20.1 38.5833Z\"\n      strokeWidth=\"0.7\"\n    />\n  </svg>\n);\n\nexport default Phone;\n","import 'src/components/pages/contactPage/optionsSection/OptionsSection.scss';\n\nimport React from 'react';\n\nimport { EMAIL_ADDRESS, LOCATION, PHONE_NUMBER } from 'src/constants/common';\nimport defineBlock from 'src/utils/defineBlock';\nimport notify from 'src/utils/notificatons';\nimport copyText from 'src/utils/textUtils';\n\nimport Email from 'src/components/icons/general/Email';\nimport Location from 'src/components/icons/general/Location';\nimport Phone from 'src/components/icons/general/Phone';\n\nconst bem = defineBlock('OptionsSection');\n\nconst OptionsSection = () => {\n  const onCopy = async (text: string) => {\n    if (await copyText(text)) {\n      notify('Copied to clipboard!');\n    } else {\n      notify('Copying failed!');\n    }\n  };\n\n  const options = [\n    {\n      icon: <Phone />,\n      label: 'Phone',\n      value: PHONE_NUMBER,\n    },\n    {\n      icon: <Email />,\n      label: 'Email',\n      value: EMAIL_ADDRESS,\n    },\n    {\n      icon: <Location />,\n      label: 'In Person',\n      value: LOCATION,\n    },\n  ].map((optionData) => (\n    <div\n      key={optionData.label}\n      className={bem('option')}\n      onClick={() => {\n        onCopy(optionData.value);\n      }}\n    >\n      <div className={bem('icon')}>{optionData.icon}</div>\n      <div className={bem('details')}>\n        <div className={bem('label')}>{optionData.label}</div>\n        <div className={bem('value')}>{optionData.value}</div>\n      </div>\n    </div>\n  ));\n\n  return <div className={bem()}>{options}</div>;\n};\n\nexport default OptionsSection;\n","import 'src/components/pages/contactPage/formSection/FormSection.scss';\n\nimport React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nimport Button from 'src/components/common/button/Button';\nimport notify from 'src/utils/notificatons';\nimport LoadingSpinner from 'src/components/common/loadingSpinner/LoadingSpinner';\n\nconst bem = defineBlock('FormSection');\n\n/*\n  Uses EmailJS and reCaptcha to send emails. Can send up to 200 \n  emails per month and EmailJS supports rate limiting by IP to \n  avoid bot spam. Titan has been setup in EmailJS profile as a\n  email service from which to send/recieve mail. Auto-reply emails\n  may be set up for the template on EmailJS. Auto-reply emails \n  will count as an additional email towards the free email quota.\n*/\n\nconst EMAILJS_SERVICE_ID = 'service_f6vq4q1';\nconst EMAILJS_TEMPLATE_ID = 'template_stiymyn';\nconst EMAILJS_PUBLIC_KEY = 'tHKpunSrvx009HOfP';\n\nconst RECAPTCHA_SITE_KEY = '6Ldf9YYkAAAAAPP_-PKo0jycyXU-yrgkdz1SCl8Q';\n\n// Per the W3C HTML5 specification\n// https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nconst EMAIL_VALIDATION_REGEX =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/;\n\nconst PHONE_VALIDATION_REGEX = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n\ntype EmailData = {\n  from_name: string;\n  contact_email: string;\n  contact_phone: string;\n  message: string;\n  'g-recaptcha-response': string | null;\n};\n\nconst FormSection = () => {\n  const recaptchaRef = useRef<ReCAPTCHA>(null);\n\n  const nameInput = useRef<HTMLInputElement>(null);\n  const emailInput = useRef<HTMLInputElement>(null);\n  const phoneInput = useRef<HTMLInputElement>(null);\n  const messageTextArea = useRef<HTMLTextAreaElement>(null);\n\n  const [isLoading, setLoading] = useState(false);\n\n  const [isNameValid, setNameValid] = useState(true);\n  const [isEmailValid, setEmailValid] = useState(true);\n  const [isPhoneValid, setPhoneValid] = useState(true);\n  const [isMessageValid, setMessageValid] = useState(true);\n\n  const validateForm = (emailData: EmailData) => {\n    const nameValid = !!emailData.from_name;\n    const emailValid = EMAIL_VALIDATION_REGEX.test(emailData.contact_email);\n    const phoneValid = PHONE_VALIDATION_REGEX.test(emailData.contact_phone);\n    const messageValid = !!emailData.message;\n\n    setNameValid(nameValid);\n    setEmailValid(emailValid);\n    setPhoneValid(phoneValid);\n    setMessageValid(messageValid);\n\n    return nameValid && emailValid && phoneValid && messageValid;\n  };\n\n  const resetForm = () => {\n    if (nameInput.current && emailInput.current && phoneInput.current && messageTextArea.current) {\n      nameInput.current.value = '';\n      emailInput.current.value = '';\n      phoneInput.current.value = '';\n      messageTextArea.current.value = '';\n    }\n\n    if (recaptchaRef.current) {\n      recaptchaRef.current.reset();\n    }\n  };\n\n  const sendEmail = () => {\n    if (!nameInput.current || !emailInput.current || !phoneInput.current || !messageTextArea.current) {\n      notify('Form not found!');\n      return;\n    }\n\n    const emailData: EmailData = {\n      from_name: nameInput.current.value,\n      contact_email: emailInput.current.value,\n      contact_phone: phoneInput.current.value,\n      message: messageTextArea.current.value,\n      'g-recaptcha-response': null,\n    };\n\n    if (!validateForm(emailData)) {\n      notify('Form validation failed!');\n      return;\n    }\n\n    if (!recaptchaRef.current) {\n      notify('Could not perform CAPTCHA test!');\n      return;\n    }\n\n    setLoading(true);\n\n    const onCaptchaTestSuccess = (captchaResponse: string | null) => {\n      emailData['g-recaptcha-response'] = captchaResponse;\n      emailjs\n        .send(EMAILJS_SERVICE_ID, EMAILJS_TEMPLATE_ID, emailData, EMAILJS_PUBLIC_KEY)\n        .then(\n          () => {\n            notify('Your email was sent to me!');\n            resetForm();\n          },\n          (error) => {\n            notify('Failed to send email!');\n            console.error(error);\n          },\n        )\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    const onCaptchaTestError = (error: unknown) => {\n      notify('Failed CAPTCHA test!');\n      console.error(error);\n      setLoading(false);\n    };\n\n    recaptchaRef.current.executeAsync().then(onCaptchaTestSuccess, onCaptchaTestError);\n  };\n\n  return (\n    <div className={bem()}>\n      <div className={bem('title')}>Leave a Message</div>\n      <div className={bem('subtitle')}>and I&#39;ll get back to you ASAP</div>\n      <div className={bem('form')}>\n        {isLoading && (\n          <div className={bem('form-loader')}>\n            <LoadingSpinner />\n          </div>\n        )}\n        <div className={bem('form-row')}>\n          <input\n            ref={nameInput}\n            className={bem('form-element', { invalid: !isNameValid })}\n            type=\"text\"\n            placeholder=\"Name\"\n            autoComplete=\"nope\"\n            disabled={isLoading}\n          />\n          <input\n            ref={emailInput}\n            className={bem('form-element', { invalid: !isEmailValid })}\n            type=\"text\"\n            placeholder=\"Email\"\n            autoComplete=\"nope\"\n            disabled={isLoading}\n          />\n          <input\n            ref={phoneInput}\n            className={bem('form-element', { invalid: !isPhoneValid })}\n            type=\"text\"\n            placeholder=\"Phone\"\n            autoComplete=\"nope\"\n            disabled={isLoading}\n          />\n        </div>\n        <div className={bem('form-row')}>\n          <textarea\n            ref={messageTextArea}\n            className={bem('form-element', { invalid: !isMessageValid })}\n            rows={10}\n            autoComplete=\"nope\"\n            disabled={isLoading}\n          />\n        </div>\n        <div className={bem('form-row')}>\n          <Button\n            size=\"medium\"\n            type=\"filled\"\n            disabled={isLoading}\n            label=\"Send\"\n            onClick={sendEmail}\n          />\n        </div>\n      </div>\n      <ReCAPTCHA\n        ref={recaptchaRef}\n        size=\"invisible\"\n        sitekey={RECAPTCHA_SITE_KEY}\n      />\n    </div>\n  );\n};\n\nexport default FormSection;\n","import 'src/components/pages/contactPage/socialsSection/SocialsSection.scss';\n\nimport React from 'react';\n\nimport { Handle, Link } from 'src/constants/common';\nimport defineBlock from 'src/utils/defineBlock';\n\nimport FacebookVariant1 from 'src/components/icons/logos/socials/FacebookVariant1';\nimport GitHubVariant1 from 'src/components/icons/logos/socials/GitHubVariant1';\nimport InstagramVariant1 from 'src/components/icons/logos/socials/InstagramVariant1';\nimport LinkedinVariant1 from 'src/components/icons/logos/socials/LinkedinVariant1';\nimport TwitterVariant1 from 'src/components/icons/logos/socials/TwitterVariant1';\n\nconst bem = defineBlock('SocialsSection');\n\nconst SocialsSection = () => (\n  <div className={bem()}>\n    <div className={bem('title')}>\n      Social Media<span className={bem('symbol')}>&#123;</span>\n    </div>\n    <div className={bem('socials')}>\n      <div className={bem('item-container')}>\n        <a\n          className={bem('item', 'linkedin')}\n          href={Link.LinkedIn}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <LinkedinVariant1 />\n          <div className={bem('handle')}>{Handle.LinkedIn}</div>\n        </a>\n      </div>\n      <div className={bem('item-container')}>\n        <a\n          className={bem('item', 'github')}\n          href={Link.GitHub}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <GitHubVariant1 />\n          <div className={bem('handle')}>{Handle.GitHub}</div>\n        </a>\n      </div>\n      <div className={bem('item-container')}>\n        <a\n          className={bem('item', 'facebook')}\n          href={Link.Facebook}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <FacebookVariant1 />\n          <div className={bem('handle')}>{Handle.Facebook}</div>\n        </a>\n      </div>\n      <div className={bem('item-container')}>\n        <a\n          className={bem('item', 'instagram')}\n          href={Link.Instagram}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <InstagramVariant1 />\n          <div className={bem('handle')}>{Handle.Instagram}</div>\n        </a>\n      </div>\n      <div className={bem('item-container')}>\n        <a\n          className={bem('item', 'twitter')}\n          href={Link.Twitter}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <TwitterVariant1 />\n          <div className={bem('handle')}>{Handle.Twitter}</div>\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\nexport default SocialsSection;\n","import 'src/components/pages/contactPage/globeSection/GlobeScene.scss';\n\nimport Globe, { GlobeInstance } from 'globe.gl';\nimport { DoubleSide, MeshLambertMaterial } from 'three';\nimport * as topojson from 'topojson-client';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nconst globeURL = new URL('src/assets/datasets/globe.json?url', import.meta.url).href;\n\nconst markerSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 128a64 64 0 1 1 0 128 64 64 0 1 1 0-128z\"/></svg>`;\n\ninterface MarkerData {\n  lat: number;\n  lng: number;\n}\n\nconst HOME_LAT = 39.613319;\nconst HOME_LNG = -105.016647;\n\nconst bem = defineBlock('ContactGlobeScene');\n\nexport default class GlobeScene {\n  private mountEl: HTMLElement;\n\n  private globe: GlobeInstance;\n\n  onLoadError: (error: unknown) => void;\n\n  constructor(mountEl: HTMLElement, height: number, width: number, onLoadError: (error: unknown) => void) {\n    this.mountEl = mountEl;\n\n    this.globe = Globe() as unknown as GlobeInstance;\n    this.globe.height(height);\n    this.globe.width(width);\n\n    this.onLoadError = onLoadError;\n  }\n\n  init() {\n    // Config\n    this.globe(this.mountEl)\n      .backgroundColor('rgba(0,0,0,0)')\n      .atmosphereColor('rgba(100,13,247,1)')\n      .globeMaterial(new MeshLambertMaterial({ color: 0x140231 }))\n      .showGlobe(true)\n      .showAtmosphere(true)\n      .pointOfView({ lat: HOME_LAT, lng: HOME_LNG, altitude: 2.25 });\n\n    this.globe.controls().enableZoom = false;\n    this.globe.controls().enableRotate = false;\n\n    // Country layer\n    fetch(globeURL)\n      .then((res) => res.json())\n      .then((landTopo: TopoJSON.Topology<TopoJSON.Objects<GeoJSON.GeoJsonProperties>>) => {\n        if (!landTopo.objects.land) {\n          throw new Error('Globe JSON is malformed!');\n        }\n\n        const geoJSON = topojson.feature(landTopo, landTopo.objects.land) as unknown as GeoJSON.FeatureCollection;\n        this.globe\n          .polygonsData(geoJSON.features)\n          .polygonCapMaterial(new MeshLambertMaterial({ color: 0x640dfb, side: DoubleSide }))\n          .polygonSideColor(() => 'rgba(0,0,0,0)');\n      })\n      .catch(this.onLoadError);\n\n    // Markers\n    const gData: MarkerData[] = [\n      {\n        lat: HOME_LAT,\n        lng: HOME_LNG,\n      },\n    ];\n    this.globe.htmlElementsData(gData).htmlElement(() => {\n      const container = document.createElement('div');\n      container.innerHTML = `<div class=\"${bem('marker-text')}\">Littleton, CO</div>${markerSvg}`;\n      container.className = bem('marker');\n      return container;\n    });\n  }\n\n  destroy() {\n    this.globe._destructor();\n  }\n}\n","import 'src/components/pages/contactPage/globeSection/GlobeSection.scss';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nimport GlobeScene from 'src/components/pages/contactPage/globeSection/GlobeScene';\nimport notify from 'src/utils/notificatons';\n\nconst bem = defineBlock('ContactGlobeSection');\n\nconst GLOBE_HEIGHT = 600;\nconst GLOBE_WIDTH = 600;\n\nconst GlobeSection = () => {\n  const globeMountRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    let scene: GlobeScene | null = null;\n    if (globeMountRef.current) {\n      const onLoadError = () => {\n        notify('Failed to load globe assets!');\n      };\n      scene = new GlobeScene(globeMountRef.current, GLOBE_HEIGHT, GLOBE_WIDTH, onLoadError);\n      scene.init();\n    }\n    return () => {\n      scene?.destroy();\n    };\n  }, []);\n\n  return (\n    <div className={bem()}>\n      <div className={bem('title')}>\n        Let&#39;s Meet For Coffee<span className={bem('symbol')}>&#123;</span>\n      </div>\n      <div className={bem('subtitle')}>\n        Schedule a meeting with me! If I&#39;m not in the mountains hiking, camping, rock climbing, or skiing, then I\n        would love to chat.\n      </div>\n      <div\n        ref={globeMountRef}\n        className={bem('globe')}\n      />\n    </div>\n  );\n};\n\nexport default GlobeSection;\n","import 'src/components/pages/contactPage/ContactPage.scss';\n\nimport React from 'react';\n\nimport defineBlock from 'src/utils/defineBlock';\n\nimport PageHeader from 'src/components/common/pageHeader/PageHeader';\nimport LineSplit from 'src/components/layout/lineSplit/LineSplit';\nimport OptionsSection from 'src/components/pages/contactPage/optionsSection/OptionsSection';\nimport FormSection from 'src/components/pages/contactPage/formSection/FormSection';\nimport SocialsSection from 'src/components/pages/contactPage/socialsSection/SocialsSection';\nimport GlobeSection from 'src/components/pages/contactPage/globeSection/GlobeSection';\n\nconst bem = defineBlock('ContactPage');\n\nconst ContactPage = () => (\n  <div className={bem()}>\n    <div className={bem('header')}>\n      <PageHeader\n        title=\"Contact Me\"\n        subtitle=\"Let’s Work Together\"\n        description=\"Want to get in touch? Here's how you can reach me.\"\n      />\n    </div>\n    <div className={bem('line-split')}>\n      <LineSplit />\n    </div>\n    <div className={bem('options')}>\n      <OptionsSection />\n    </div>\n    <div className={bem('form')}>\n      <FormSection />\n    </div>\n    <div className={bem('socials')}>\n      <SocialsSection />\n    </div>\n    <div className={bem('globe')}>\n      <GlobeSection />\n    </div>\n  </div>\n);\n\nexport default ContactPage;\n"],"names":["bem","defineBlock","size","type","color","disabled","icon","label","children","onClick","className","title","subtitle","description","useState","Math","ceil","random","position","Star","viewBox","xmlns","d","CONTAINER_ID","createContainer","element","document","getElementById","createElement","setAttribute","body","appendChild","message","timeout","animationDuration","container","notificationEl","style","setProperty","messageEl","innerText","closeEl","innerHTML","close","setTimeout","removeChild","autoCloseTimeout","addEventListener","clearTimeout","copyText","text","navigator","clipboard","writeText","console","error","fill","clipPath","id","width","height","strokeWidth","onCopy","notify","options","value","PHONE_NUMBER","EMAIL_ADDRESS","LOCATION","map","optionData","EMAIL_VALIDATION_REGEX","PHONE_VALIDATION_REGEX","recaptchaRef","useRef","nameInput","emailInput","phoneInput","messageTextArea","isLoading","setLoading","isNameValid","setNameValid","isEmailValid","setEmailValid","isPhoneValid","setPhoneValid","isMessageValid","setMessageValid","LoadingSpinner","ref","invalid","placeholder","autoComplete","rows","Button","current","emailData","from_name","contact_email","contact_phone","nameValid","emailValid","test","phoneValid","messageValid","validateForm","executeAsync","then","captchaResponse","emailjs","reset","finally","sitekey","href","Link","target","rel","LinkedinVariant1","Handle","GitHubVariant1","FacebookVariant1","InstagramVariant1","TwitterVariant1","globeURL","URL","HOME_LAT","HOME_LNG","GlobeScene","mountEl","onLoadError","globe","this","Globe","backgroundColor","atmosphereColor","globeMaterial","MeshLambertMaterial","showGlobe","showAtmosphere","pointOfView","lat","lng","altitude","controls","enableZoom","enableRotate","fetch","res","json","landTopo","objects","land","Error","geoJSON","topojson","polygonsData","features","polygonCapMaterial","side","DoubleSide","polygonSideColor","catch","gData","htmlElementsData","htmlElement","_destructor","globeMountRef","useEffect","scene","init","destroy","PageHeader","LineSplit"],"sourceRoot":""}